<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="442" onload="init(evt)" viewBox="0 0 1200 442" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="442" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python main.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="431.00"> </text><svg id="frames" x="10" width="1180" total_samples="47281"><g><title>__init__ (sql_metadata/parser.py:34) (83 samples, 0.18%)</title><rect x="0.3447%" y="164" width="0.1755%" height="15" fill="rgb(227,0,7)" fg:x="163" fg:w="83"/><text x="0.5947%" y="174.50"></text></g><g><title>getLogger (logging/__init__.py:2079) (58 samples, 0.12%)</title><rect x="0.3976%" y="180" width="0.1227%" height="15" fill="rgb(217,0,24)" fg:x="188" fg:w="58"/><text x="0.6476%" y="190.50"></text></g><g><title>_preprocess_query (sql_metadata/parser.py:982) (252 samples, 0.53%)</title><rect x="0.5562%" y="180" width="0.5330%" height="15" fill="rgb(221,193,54)" fg:x="263" fg:w="252"/><text x="0.8062%" y="190.50"></text></g><g><title>sub (re.py:209) (237 samples, 0.50%)</title><rect x="0.5880%" y="196" width="0.5013%" height="15" fill="rgb(248,212,6)" fg:x="278" fg:w="237"/><text x="0.8380%" y="206.50"></text></g><g><title>replace_quotes_in_string (sql_metadata/parser.py:973) (90 samples, 0.19%)</title><rect x="0.8989%" y="212" width="0.1904%" height="15" fill="rgb(208,68,35)" fg:x="425" fg:w="90"/><text x="1.1489%" y="222.50"></text></g><g><title>sub (re.py:209) (66 samples, 0.14%)</title><rect x="0.9496%" y="228" width="0.1396%" height="15" fill="rgb(232,128,0)" fg:x="449" fg:w="66"/><text x="1.1996%" y="238.50"></text></g><g><title>_preprocess_query (sql_metadata/parser.py:983) (89 samples, 0.19%)</title><rect x="1.0892%" y="180" width="0.1882%" height="15" fill="rgb(207,160,47)" fg:x="515" fg:w="89"/><text x="1.3392%" y="190.50"></text></g><g><title>sub (re.py:209) (87 samples, 0.18%)</title><rect x="1.0935%" y="196" width="0.1840%" height="15" fill="rgb(228,23,34)" fg:x="517" fg:w="87"/><text x="1.3435%" y="206.50"></text></g><g><title>_preprocess_query (sql_metadata/parser.py:984) (206 samples, 0.44%)</title><rect x="1.2775%" y="180" width="0.4357%" height="15" fill="rgb(218,30,26)" fg:x="604" fg:w="206"/><text x="1.5275%" y="190.50"></text></g><g><title>sub (re.py:209) (198 samples, 0.42%)</title><rect x="1.2944%" y="196" width="0.4188%" height="15" fill="rgb(220,122,19)" fg:x="612" fg:w="198"/><text x="1.5444%" y="206.50"></text></g><g><title>replace_back_quotes_in_string (sql_metadata/parser.py:976) (89 samples, 0.19%)</title><rect x="1.5249%" y="212" width="0.1882%" height="15" fill="rgb(250,228,42)" fg:x="721" fg:w="89"/><text x="1.7749%" y="222.50"></text></g><g><title>sub (re.py:209) (65 samples, 0.14%)</title><rect x="1.5757%" y="228" width="0.1375%" height="15" fill="rgb(240,193,28)" fg:x="745" fg:w="65"/><text x="1.8257%" y="238.50"></text></g><g><title>__init__ (sql_metadata/parser.py:38) (560 samples, 1.18%)</title><rect x="0.5309%" y="164" width="1.1844%" height="15" fill="rgb(216,20,37)" fg:x="251" fg:w="560"/><text x="0.7809%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sql_metadata/parser.py:647) (48 samples, 0.10%)</title><rect x="1.8718%" y="212" width="0.1015%" height="15" fill="rgb(206,188,39)" fg:x="885" fg:w="48"/><text x="2.1218%" y="222.50"></text></g><g><title>__init__ (sqlparse/sql.py:51) (65 samples, 0.14%)</title><rect x="3.0372%" y="276" width="0.1375%" height="15" fill="rgb(217,207,13)" fg:x="1436" fg:w="65"/><text x="3.2872%" y="286.50"></text></g><g><title>__init__ (sqlparse/sql.py:56) (295 samples, 0.62%)</title><rect x="3.4559%" y="276" width="0.6239%" height="15" fill="rgb(231,73,38)" fg:x="1634" fg:w="295"/><text x="3.7059%" y="286.50"></text></g><g><title>__contains__ (sqlparse/tokens.py:19) (161 samples, 0.34%)</title><rect x="3.7393%" y="292" width="0.3405%" height="15" fill="rgb(225,20,46)" fg:x="1768" fg:w="161"/><text x="3.9893%" y="302.50"></text></g><g><title>__init__ (sqlparse/sql.py:57) (280 samples, 0.59%)</title><rect x="4.0799%" y="276" width="0.5922%" height="15" fill="rgb(210,31,41)" fg:x="1929" fg:w="280"/><text x="4.3299%" y="286.50"></text></g><g><title>__contains__ (sqlparse/tokens.py:19) (119 samples, 0.25%)</title><rect x="4.4204%" y="292" width="0.2517%" height="15" fill="rgb(221,200,47)" fg:x="2090" fg:w="119"/><text x="4.6704%" y="302.50"></text></g><g><title>__init__ (sqlparse/sql.py:58) (308 samples, 0.65%)</title><rect x="4.6721%" y="276" width="0.6514%" height="15" fill="rgb(226,26,5)" fg:x="2209" fg:w="308"/><text x="4.9221%" y="286.50"></text></g><g><title>__contains__ (sqlparse/tokens.py:19) (154 samples, 0.33%)</title><rect x="4.9978%" y="292" width="0.3257%" height="15" fill="rgb(249,33,26)" fg:x="2363" fg:w="154"/><text x="5.2478%" y="302.50"></text></g><g><title>process (sqlparse/engine/statement_splitter.py:102) (1,496 samples, 3.16%)</title><rect x="2.2906%" y="260" width="3.1641%" height="15" fill="rgb(235,183,28)" fg:x="1083" fg:w="1496"/><text x="2.5406%" y="270.50">pro..</text></g><g><title>__init__ (sqlparse/sql.py:59) (62 samples, 0.13%)</title><rect x="5.3235%" y="276" width="0.1311%" height="15" fill="rgb(221,5,38)" fg:x="2517" fg:w="62"/><text x="5.5735%" y="286.50"></text></g><g><title>process (sqlparse/engine/statement_splitter.py:109) (91 samples, 0.19%)</title><rect x="5.4546%" y="260" width="0.1925%" height="15" fill="rgb(247,18,42)" fg:x="2579" fg:w="91"/><text x="5.7046%" y="270.50"></text></g><g><title>process (sqlparse/engine/statement_splitter.py:110) (78 samples, 0.16%)</title><rect x="5.6471%" y="260" width="0.1650%" height="15" fill="rgb(241,131,45)" fg:x="2670" fg:w="78"/><text x="5.8971%" y="270.50"></text></g><g><title>__init__ (sqlparse/sql.py:161) (85 samples, 0.18%)</title><rect x="5.9242%" y="276" width="0.1798%" height="15" fill="rgb(249,31,29)" fg:x="2801" fg:w="85"/><text x="6.1742%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (sqlparse/sql.py:161) (72 samples, 0.15%)</title><rect x="5.9517%" y="292" width="0.1523%" height="15" fill="rgb(225,111,53)" fg:x="2814" fg:w="72"/><text x="6.2017%" y="302.50"></text></g><g><title>__init__ (sqlparse/sql.py:162) (170 samples, 0.36%)</title><rect x="6.1039%" y="276" width="0.3596%" height="15" fill="rgb(238,160,17)" fg:x="2886" fg:w="170"/><text x="6.3539%" y="286.50"></text></g><g><title>__str__ (sqlparse/sql.py:166) (140 samples, 0.30%)</title><rect x="6.1674%" y="292" width="0.2961%" height="15" fill="rgb(214,148,48)" fg:x="2916" fg:w="140"/><text x="6.4174%" y="302.50"></text></g><g><title>&lt;genexpr&gt; (sqlparse/sql.py:166) (98 samples, 0.21%)</title><rect x="6.2562%" y="308" width="0.2073%" height="15" fill="rgb(232,36,49)" fg:x="2958" fg:w="98"/><text x="6.5062%" y="318.50"></text></g><g><title>process (sqlparse/engine/statement_splitter.py:115) (298 samples, 0.63%)</title><rect x="5.8353%" y="260" width="0.6303%" height="15" fill="rgb(209,103,24)" fg:x="2759" fg:w="298"/><text x="6.0853%" y="270.50"></text></g><g><title>get_tokens (sqlparse/lexer.py:137) (49 samples, 0.10%)</title><rect x="6.6940%" y="276" width="0.1036%" height="15" fill="rgb(229,88,8)" fg:x="3165" fg:w="49"/><text x="6.9440%" y="286.50"></text></g><g><title>get_tokens (sqlparse/lexer.py:138) (51 samples, 0.11%)</title><rect x="6.7977%" y="276" width="0.1079%" height="15" fill="rgb(213,181,19)" fg:x="3214" fg:w="51"/><text x="7.0477%" y="286.50"></text></g><g><title>get_tokens (sqlparse/lexer.py:139) (665 samples, 1.41%)</title><rect x="6.9055%" y="276" width="1.4065%" height="15" fill="rgb(254,191,54)" fg:x="3265" fg:w="665"/><text x="7.1555%" y="286.50"></text></g><g><title>get_tokens (sqlparse/lexer.py:140) (5,624 samples, 11.89%)</title><rect x="8.3120%" y="276" width="11.8948%" height="15" fill="rgb(241,83,37)" fg:x="3930" fg:w="5624"/><text x="8.5620%" y="286.50">get_tokens (sqlpar..</text></g><g><title>get_tokens (sqlparse/lexer.py:142) (174 samples, 0.37%)</title><rect x="20.2068%" y="276" width="0.3680%" height="15" fill="rgb(233,36,39)" fg:x="9554" fg:w="174"/><text x="20.4568%" y="286.50"></text></g><g><title>get_tokens (sqlparse/lexer.py:143) (113 samples, 0.24%)</title><rect x="20.5749%" y="276" width="0.2390%" height="15" fill="rgb(226,3,54)" fg:x="9728" fg:w="113"/><text x="20.8249%" y="286.50"></text></g><g><title>get_tokens (sqlparse/lexer.py:144) (136 samples, 0.29%)</title><rect x="20.8139%" y="276" width="0.2876%" height="15" fill="rgb(245,192,40)" fg:x="9841" fg:w="136"/><text x="21.0639%" y="286.50"></text></g><g><title>get_tokens (sqlparse/lexer.py:145) (117 samples, 0.25%)</title><rect x="21.1015%" y="276" width="0.2475%" height="15" fill="rgb(238,167,29)" fg:x="9977" fg:w="117"/><text x="21.3515%" y="286.50"></text></g><g><title>get_tokens (sqlparse/lexer.py:147) (105 samples, 0.22%)</title><rect x="21.3786%" y="276" width="0.2221%" height="15" fill="rgb(232,182,51)" fg:x="10108" fg:w="105"/><text x="21.6286%" y="286.50"></text></g><g><title>get_tokens (sqlparse/lexer.py:149) (1,550 samples, 3.28%)</title><rect x="21.6006%" y="276" width="3.2783%" height="15" fill="rgb(231,60,39)" fg:x="10213" fg:w="1550"/><text x="21.8506%" y="286.50">get..</text></g><g><title>consume (sqlparse/utils.py:110) (1,366 samples, 2.89%)</title><rect x="21.9898%" y="292" width="2.8891%" height="15" fill="rgb(208,69,12)" fg:x="10397" fg:w="1366"/><text x="22.2398%" y="302.50">co..</text></g><g><title>process (sqlparse/engine/statement_splitter.py:87) (8,721 samples, 18.45%)</title><rect x="6.4825%" y="260" width="18.4450%" height="15" fill="rgb(235,93,37)" fg:x="3065" fg:w="8721"/><text x="6.7325%" y="270.50">process (sqlparse/engine/stat..</text></g><g><title>process (sqlparse/engine/statement_splitter.py:92) (51 samples, 0.11%)</title><rect x="24.9276%" y="260" width="0.1079%" height="15" fill="rgb(213,116,39)" fg:x="11786" fg:w="51"/><text x="25.1776%" y="270.50"></text></g><g><title>_change_splitlevel (sqlparse/engine/statement_splitter.py:32) (98 samples, 0.21%)</title><rect x="25.2977%" y="276" width="0.2073%" height="15" fill="rgb(222,207,29)" fg:x="11961" fg:w="98"/><text x="25.5477%" y="286.50"></text></g><g><title>_change_splitlevel (sqlparse/engine/statement_splitter.py:34) (54 samples, 0.11%)</title><rect x="25.5050%" y="276" width="0.1142%" height="15" fill="rgb(206,96,30)" fg:x="12059" fg:w="54"/><text x="25.7550%" y="286.50"></text></g><g><title>_change_splitlevel (sqlparse/engine/statement_splitter.py:36) (341 samples, 0.72%)</title><rect x="25.6192%" y="276" width="0.7212%" height="15" fill="rgb(218,138,4)" fg:x="12113" fg:w="341"/><text x="25.8692%" y="286.50"></text></g><g><title>__contains__ (sqlparse/tokens.py:19) (198 samples, 0.42%)</title><rect x="25.9216%" y="292" width="0.4188%" height="15" fill="rgb(250,191,14)" fg:x="12256" fg:w="198"/><text x="26.1716%" y="302.50"></text></g><g><title>run (sqlparse/engine/filter_stack.py:39) (11,435 samples, 24.19%)</title><rect x="2.2631%" y="244" width="24.1852%" height="15" fill="rgb(239,60,40)" fg:x="1070" fg:w="11435"/><text x="2.5131%" y="254.50">run (sqlparse/engine/filter_stack.py:3..</text></g><g><title>process (sqlparse/engine/statement_splitter.py:99) (668 samples, 1.41%)</title><rect x="25.0354%" y="260" width="1.4128%" height="15" fill="rgb(206,27,48)" fg:x="11837" fg:w="668"/><text x="25.2854%" y="270.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (69 samples, 0.15%)</title><rect x="26.8924%" y="292" width="0.1459%" height="15" fill="rgb(225,35,8)" fg:x="12715" fg:w="69"/><text x="27.1424%" y="302.50"></text></g><g><title>match (sqlparse/engine/grouping.py:253) (50 samples, 0.11%)</title><rect x="26.9326%" y="308" width="0.1058%" height="15" fill="rgb(250,213,24)" fg:x="12734" fg:w="50"/><text x="27.1826%" y="318.50"></text></g><g><title>group_arrays (sqlparse/engine/grouping.py:264) (169 samples, 0.36%)</title><rect x="26.7147%" y="276" width="0.3574%" height="15" fill="rgb(247,123,22)" fg:x="12631" fg:w="169"/><text x="26.9647%" y="286.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:465) (71 samples, 0.15%)</title><rect x="27.2837%" y="308" width="0.1502%" height="15" fill="rgb(231,138,38)" fg:x="12900" fg:w="71"/><text x="27.5337%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (49 samples, 0.10%)</title><rect x="27.5417%" y="308" width="0.1036%" height="15" fill="rgb(231,145,46)" fg:x="13022" fg:w="49"/><text x="27.7917%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (223 samples, 0.47%)</title><rect x="27.2647%" y="292" width="0.4716%" height="15" fill="rgb(251,118,11)" fg:x="12891" fg:w="223"/><text x="27.5147%" y="302.50"></text></g><g><title>group_as (sqlparse/engine/grouping.py:184) (336 samples, 0.71%)</title><rect x="27.0891%" y="276" width="0.7106%" height="15" fill="rgb(217,147,25)" fg:x="12808" fg:w="336"/><text x="27.3391%" y="286.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:465) (94 samples, 0.20%)</title><rect x="28.0493%" y="308" width="0.1988%" height="15" fill="rgb(247,81,37)" fg:x="13262" fg:w="94"/><text x="28.2993%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:465) (67 samples, 0.14%)</title><rect x="28.4427%" y="324" width="0.1417%" height="15" fill="rgb(209,12,38)" fg:x="13448" fg:w="67"/><text x="28.6927%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (59 samples, 0.12%)</title><rect x="28.6584%" y="324" width="0.1248%" height="15" fill="rgb(227,1,9)" fg:x="13550" fg:w="59"/><text x="28.9084%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (61 samples, 0.13%)</title><rect x="28.7832%" y="324" width="0.1290%" height="15" fill="rgb(248,47,43)" fg:x="13609" fg:w="61"/><text x="29.0332%" y="334.50"></text></g><g><title>match (sqlparse/engine/grouping.py:189) (53 samples, 0.11%)</title><rect x="28.8002%" y="340" width="0.1121%" height="15" fill="rgb(221,10,30)" fg:x="13617" fg:w="53"/><text x="29.0502%" y="350.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (251 samples, 0.53%)</title><rect x="28.3983%" y="308" width="0.5309%" height="15" fill="rgb(210,229,1)" fg:x="13427" fg:w="251"/><text x="28.6483%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (103 samples, 0.22%)</title><rect x="28.9292%" y="308" width="0.2178%" height="15" fill="rgb(222,148,37)" fg:x="13678" fg:w="103"/><text x="29.1792%" y="318.50"></text></g><g><title>match (sqlparse/engine/grouping.py:189) (90 samples, 0.19%)</title><rect x="28.9567%" y="324" width="0.1904%" height="15" fill="rgb(234,67,33)" fg:x="13691" fg:w="90"/><text x="29.2067%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (553 samples, 1.17%)</title><rect x="28.0007%" y="292" width="1.1696%" height="15" fill="rgb(247,98,35)" fg:x="13239" fg:w="553"/><text x="28.2507%" y="302.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (61 samples, 0.13%)</title><rect x="29.1703%" y="292" width="0.1290%" height="15" fill="rgb(247,138,52)" fg:x="13792" fg:w="61"/><text x="29.4203%" y="302.50"></text></g><g><title>match (sqlparse/engine/grouping.py:189) (50 samples, 0.11%)</title><rect x="29.1935%" y="308" width="0.1058%" height="15" fill="rgb(213,79,30)" fg:x="13803" fg:w="50"/><text x="29.4435%" y="318.50"></text></g><g><title>group_assignment (sqlparse/engine/grouping.py:201) (712 samples, 1.51%)</title><rect x="27.8124%" y="276" width="1.5059%" height="15" fill="rgb(246,177,23)" fg:x="13150" fg:w="712"/><text x="28.0624%" y="286.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:21) (54 samples, 0.11%)</title><rect x="29.3310%" y="292" width="0.1142%" height="15" fill="rgb(230,62,27)" fg:x="13868" fg:w="54"/><text x="29.5810%" y="302.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:34) (98 samples, 0.21%)</title><rect x="29.5806%" y="292" width="0.2073%" height="15" fill="rgb(216,154,8)" fg:x="13986" fg:w="98"/><text x="29.8306%" y="302.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:37) (154 samples, 0.33%)</title><rect x="29.7879%" y="292" width="0.3257%" height="15" fill="rgb(244,35,45)" fg:x="14084" fg:w="154"/><text x="30.0379%" y="302.50"></text></g><g><title>group_begin (sqlparse/engine/grouping.py:73) (519 samples, 1.10%)</title><rect x="29.3183%" y="276" width="1.0977%" height="15" fill="rgb(251,115,12)" fg:x="13862" fg:w="519"/><text x="29.5683%" y="286.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:40) (143 samples, 0.30%)</title><rect x="30.1136%" y="292" width="0.3024%" height="15" fill="rgb(240,54,50)" fg:x="14238" fg:w="143"/><text x="30.3636%" y="302.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:21) (79 samples, 0.17%)</title><rect x="30.4393%" y="292" width="0.1671%" height="15" fill="rgb(233,84,52)" fg:x="14392" fg:w="79"/><text x="30.6893%" y="302.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:37) (185 samples, 0.39%)</title><rect x="30.7565%" y="292" width="0.3913%" height="15" fill="rgb(207,117,47)" fg:x="14542" fg:w="185"/><text x="31.0065%" y="302.50"></text></g><g><title>group_brackets (sqlparse/engine/grouping.py:53) (502 samples, 1.06%)</title><rect x="30.4160%" y="276" width="1.0617%" height="15" fill="rgb(249,43,39)" fg:x="14381" fg:w="502"/><text x="30.6660%" y="286.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:40) (156 samples, 0.33%)</title><rect x="31.1478%" y="292" width="0.3299%" height="15" fill="rgb(209,38,44)" fg:x="14727" fg:w="156"/><text x="31.3978%" y="302.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:34) (111 samples, 0.23%)</title><rect x="31.6808%" y="292" width="0.2348%" height="15" fill="rgb(236,212,23)" fg:x="14979" fg:w="111"/><text x="31.9308%" y="302.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:37) (137 samples, 0.29%)</title><rect x="31.9156%" y="292" width="0.2898%" height="15" fill="rgb(242,79,21)" fg:x="15090" fg:w="137"/><text x="32.1656%" y="302.50"></text></g><g><title>group_case (sqlparse/engine/grouping.py:61) (478 samples, 1.01%)</title><rect x="31.4778%" y="276" width="1.0110%" height="15" fill="rgb(211,96,35)" fg:x="14883" fg:w="478"/><text x="31.7278%" y="286.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:40) (134 samples, 0.28%)</title><rect x="32.2053%" y="292" width="0.2834%" height="15" fill="rgb(253,215,40)" fg:x="15227" fg:w="134"/><text x="32.4553%" y="302.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:465) (79 samples, 0.17%)</title><rect x="32.7785%" y="308" width="0.1671%" height="15" fill="rgb(211,81,21)" fg:x="15498" fg:w="79"/><text x="33.0285%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (111 samples, 0.23%)</title><rect x="33.0386%" y="308" width="0.2348%" height="15" fill="rgb(208,190,38)" fg:x="15621" fg:w="111"/><text x="33.2886%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (49 samples, 0.10%)</title><rect x="33.2734%" y="308" width="0.1036%" height="15" fill="rgb(235,213,38)" fg:x="15732" fg:w="49"/><text x="33.5234%" y="318.50"></text></g><g><title>group_tokens (sqlparse/sql.py:329) (110 samples, 0.23%)</title><rect x="33.5293%" y="324" width="0.2327%" height="15" fill="rgb(237,122,38)" fg:x="15853" fg:w="110"/><text x="33.7793%" y="334.50"></text></g><g><title>__init__ (sqlparse/sql.py:162) (88 samples, 0.19%)</title><rect x="33.5759%" y="340" width="0.1861%" height="15" fill="rgb(244,218,35)" fg:x="15875" fg:w="88"/><text x="33.8259%" y="350.50"></text></g><g><title>__str__ (sqlparse/sql.py:166) (50 samples, 0.11%)</title><rect x="33.6562%" y="356" width="0.1058%" height="15" fill="rgb(240,68,47)" fg:x="15913" fg:w="50"/><text x="33.9062%" y="366.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:480) (131 samples, 0.28%)</title><rect x="33.5124%" y="308" width="0.2771%" height="15" fill="rgb(210,16,53)" fg:x="15845" fg:w="131"/><text x="33.7624%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (505 samples, 1.07%)</title><rect x="32.7425%" y="292" width="1.0681%" height="15" fill="rgb(235,124,12)" fg:x="15481" fg:w="505"/><text x="32.9925%" y="302.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (112 samples, 0.24%)</title><rect x="33.8106%" y="292" width="0.2369%" height="15" fill="rgb(224,169,11)" fg:x="15986" fg:w="112"/><text x="34.0606%" y="302.50"></text></g><g><title>match (sqlparse/engine/grouping.py:210) (86 samples, 0.18%)</title><rect x="33.8656%" y="308" width="0.1819%" height="15" fill="rgb(250,166,2)" fg:x="16012" fg:w="86"/><text x="34.1156%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:477) (135 samples, 0.29%)</title><rect x="34.0475%" y="292" width="0.2855%" height="15" fill="rgb(242,216,29)" fg:x="16098" fg:w="135"/><text x="34.2975%" y="302.50"></text></g><g><title>token_next (sqlparse/sql.py:301) (102 samples, 0.22%)</title><rect x="34.1173%" y="308" width="0.2157%" height="15" fill="rgb(230,116,27)" fg:x="16131" fg:w="102"/><text x="34.3673%" y="318.50"></text></g><g><title>valid (sqlparse/engine/grouping.py:213) (86 samples, 0.18%)</title><rect x="34.3605%" y="308" width="0.1819%" height="15" fill="rgb(228,99,48)" fg:x="16246" fg:w="86"/><text x="34.6105%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:478) (103 samples, 0.22%)</title><rect x="34.3330%" y="292" width="0.2178%" height="15" fill="rgb(253,11,6)" fg:x="16233" fg:w="103"/><text x="34.5830%" y="302.50"></text></g><g><title>flatten (sqlparse/sql.py:215) (98 samples, 0.21%)</title><rect x="35.4138%" y="372" width="0.2073%" height="15" fill="rgb(247,143,39)" fg:x="16744" fg:w="98"/><text x="35.6638%" y="382.50"></text></g><g><title>__init__ (sqlparse/sql.py:162) (372 samples, 0.79%)</title><rect x="34.8491%" y="324" width="0.7868%" height="15" fill="rgb(236,97,10)" fg:x="16477" fg:w="372"/><text x="35.0991%" y="334.50"></text></g><g><title>__str__ (sqlparse/sql.py:166) (232 samples, 0.49%)</title><rect x="35.1452%" y="340" width="0.4907%" height="15" fill="rgb(233,208,19)" fg:x="16617" fg:w="232"/><text x="35.3952%" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sqlparse/sql.py:166) (166 samples, 0.35%)</title><rect x="35.2848%" y="356" width="0.3511%" height="15" fill="rgb(216,164,2)" fg:x="16683" fg:w="166"/><text x="35.5348%" y="366.50"></text></g><g><title>group_tokens (sqlparse/sql.py:329) (467 samples, 0.99%)</title><rect x="34.6672%" y="308" width="0.9877%" height="15" fill="rgb(220,129,5)" fg:x="16391" fg:w="467"/><text x="34.9172%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:480) (558 samples, 1.18%)</title><rect x="34.5763%" y="292" width="1.1802%" height="15" fill="rgb(242,17,10)" fg:x="16348" fg:w="558"/><text x="34.8263%" y="302.50"></text></g><g><title>group_comparison (sqlparse/engine/grouping.py:224) (1,549 samples, 3.28%)</title><rect x="32.5162%" y="276" width="3.2762%" height="15" fill="rgb(242,107,0)" fg:x="15374" fg:w="1549"/><text x="32.7662%" y="286.50">gro..</text></g><g><title>_group_matching (sqlparse/engine/grouping.py:34) (107 samples, 0.23%)</title><rect x="35.9870%" y="292" width="0.2263%" height="15" fill="rgb(251,28,31)" fg:x="17015" fg:w="107"/><text x="36.2370%" y="302.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:37) (172 samples, 0.36%)</title><rect x="36.2133%" y="292" width="0.3638%" height="15" fill="rgb(233,223,10)" fg:x="17122" fg:w="172"/><text x="36.4633%" y="302.50"></text></g><g><title>group_for (sqlparse/engine/grouping.py:69) (527 samples, 1.11%)</title><rect x="35.7924%" y="276" width="1.1146%" height="15" fill="rgb(215,21,27)" fg:x="16923" fg:w="527"/><text x="36.0424%" y="286.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:40) (156 samples, 0.33%)</title><rect x="36.5771%" y="292" width="0.3299%" height="15" fill="rgb(232,23,21)" fg:x="17294" fg:w="156"/><text x="36.8271%" y="302.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:465) (90 samples, 0.19%)</title><rect x="37.1439%" y="308" width="0.1904%" height="15" fill="rgb(244,5,23)" fg:x="17562" fg:w="90"/><text x="37.3939%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:465) (90 samples, 0.19%)</title><rect x="37.5246%" y="324" width="0.1904%" height="15" fill="rgb(226,81,46)" fg:x="17742" fg:w="90"/><text x="37.7746%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (78 samples, 0.16%)</title><rect x="37.8186%" y="324" width="0.1650%" height="15" fill="rgb(247,70,30)" fg:x="17881" fg:w="78"/><text x="38.0686%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (89 samples, 0.19%)</title><rect x="37.9835%" y="324" width="0.1882%" height="15" fill="rgb(212,68,19)" fg:x="17959" fg:w="89"/><text x="38.2335%" y="334.50"></text></g><g><title>match (sqlparse/engine/grouping.py:299) (72 samples, 0.15%)</title><rect x="38.0195%" y="340" width="0.1523%" height="15" fill="rgb(240,187,13)" fg:x="17976" fg:w="72"/><text x="38.2695%" y="350.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:477) (53 samples, 0.11%)</title><rect x="38.1718%" y="324" width="0.1121%" height="15" fill="rgb(223,113,26)" fg:x="18048" fg:w="53"/><text x="38.4218%" y="334.50"></text></g><g><title>flatten (sqlparse/sql.py:213) (54 samples, 0.11%)</title><rect x="38.9332%" y="388" width="0.1142%" height="15" fill="rgb(206,192,2)" fg:x="18408" fg:w="54"/><text x="39.1832%" y="398.50"></text></g><g><title>flatten (sqlparse/sql.py:214) (84 samples, 0.18%)</title><rect x="39.0474%" y="388" width="0.1777%" height="15" fill="rgb(241,108,4)" fg:x="18462" fg:w="84"/><text x="39.2974%" y="398.50"></text></g><g><title>flatten (sqlparse/sql.py:213) (109 samples, 0.23%)</title><rect x="39.6248%" y="404" width="0.2305%" height="15" fill="rgb(247,173,49)" fg:x="18735" fg:w="109"/><text x="39.8748%" y="414.50"></text></g><g><title>flatten (sqlparse/sql.py:215) (326 samples, 0.69%)</title><rect x="39.2251%" y="388" width="0.6895%" height="15" fill="rgb(224,114,35)" fg:x="18546" fg:w="326"/><text x="39.4751%" y="398.50"></text></g><g><title>group_tokens (sqlparse/sql.py:326) (742 samples, 1.57%)</title><rect x="38.4108%" y="340" width="1.5693%" height="15" fill="rgb(245,159,27)" fg:x="18161" fg:w="742"/><text x="38.6608%" y="350.50"></text></g><g><title>__str__ (sqlparse/sql.py:166) (734 samples, 1.55%)</title><rect x="38.4277%" y="356" width="1.5524%" height="15" fill="rgb(245,172,44)" fg:x="18169" fg:w="734"/><text x="38.6777%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sqlparse/sql.py:166) (626 samples, 1.32%)</title><rect x="38.6561%" y="372" width="1.3240%" height="15" fill="rgb(236,23,11)" fg:x="18277" fg:w="626"/><text x="38.9061%" y="382.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:480) (796 samples, 1.68%)</title><rect x="38.3431%" y="324" width="1.6836%" height="15" fill="rgb(205,117,38)" fg:x="18129" fg:w="796"/><text x="38.5931%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (1,217 samples, 2.57%)</title><rect x="37.4759%" y="308" width="2.5740%" height="15" fill="rgb(237,72,25)" fg:x="17719" fg:w="1217"/><text x="37.7259%" y="318.50">_g..</text></g><g><title>_group (sqlparse/engine/grouping.py:476) (99 samples, 0.21%)</title><rect x="40.0499%" y="308" width="0.2094%" height="15" fill="rgb(244,70,9)" fg:x="18936" fg:w="99"/><text x="40.2999%" y="318.50"></text></g><g><title>match (sqlparse/engine/grouping.py:299) (78 samples, 0.16%)</title><rect x="40.0943%" y="324" width="0.1650%" height="15" fill="rgb(217,125,39)" fg:x="18957" fg:w="78"/><text x="40.3443%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:477) (51 samples, 0.11%)</title><rect x="40.2593%" y="308" width="0.1079%" height="15" fill="rgb(235,36,10)" fg:x="19035" fg:w="51"/><text x="40.5093%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:478) (84 samples, 0.18%)</title><rect x="40.3672%" y="308" width="0.1777%" height="15" fill="rgb(251,123,47)" fg:x="19086" fg:w="84"/><text x="40.6172%" y="318.50"></text></g><g><title>valid (sqlparse/engine/grouping.py:302) (82 samples, 0.17%)</title><rect x="40.3714%" y="324" width="0.1734%" height="15" fill="rgb(221,13,13)" fg:x="19088" fg:w="82"/><text x="40.6214%" y="334.50"></text></g><g><title>flatten (sqlparse/sql.py:214) (67 samples, 0.14%)</title><rect x="41.2005%" y="372" width="0.1417%" height="15" fill="rgb(238,131,9)" fg:x="19480" fg:w="67"/><text x="41.4505%" y="382.50"></text></g><g><title>group_tokens (sqlparse/sql.py:326) (391 samples, 0.83%)</title><rect x="40.6167%" y="324" width="0.8270%" height="15" fill="rgb(211,50,8)" fg:x="19204" fg:w="391"/><text x="40.8667%" y="334.50"></text></g><g><title>__str__ (sqlparse/sql.py:166) (386 samples, 0.82%)</title><rect x="40.6273%" y="340" width="0.8164%" height="15" fill="rgb(245,182,24)" fg:x="19209" fg:w="386"/><text x="40.8773%" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sqlparse/sql.py:166) (281 samples, 0.59%)</title><rect x="40.8494%" y="356" width="0.5943%" height="15" fill="rgb(242,14,37)" fg:x="19314" fg:w="281"/><text x="41.0994%" y="366.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:480) (442 samples, 0.93%)</title><rect x="40.5554%" y="308" width="0.9348%" height="15" fill="rgb(246,228,12)" fg:x="19175" fg:w="442"/><text x="40.8054%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (2,087 samples, 4.41%)</title><rect x="37.0995%" y="292" width="4.4140%" height="15" fill="rgb(213,55,15)" fg:x="17541" fg:w="2087"/><text x="37.3495%" y="302.50">_grou..</text></g><g><title>_group (sqlparse/engine/grouping.py:476) (71 samples, 0.15%)</title><rect x="41.5135%" y="292" width="0.1502%" height="15" fill="rgb(209,9,3)" fg:x="19628" fg:w="71"/><text x="41.7635%" y="302.50"></text></g><g><title>match (sqlparse/engine/grouping.py:299) (59 samples, 0.12%)</title><rect x="41.5389%" y="308" width="0.1248%" height="15" fill="rgb(230,59,30)" fg:x="19640" fg:w="59"/><text x="41.7889%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:477) (179 samples, 0.38%)</title><rect x="41.6637%" y="292" width="0.3786%" height="15" fill="rgb(209,121,21)" fg:x="19699" fg:w="179"/><text x="41.9137%" y="302.50"></text></g><g><title>token_next (sqlparse/sql.py:301) (134 samples, 0.28%)</title><rect x="41.7588%" y="308" width="0.2834%" height="15" fill="rgb(220,109,13)" fg:x="19744" fg:w="134"/><text x="42.0088%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:478) (90 samples, 0.19%)</title><rect x="42.0423%" y="292" width="0.1904%" height="15" fill="rgb(232,18,1)" fg:x="19878" fg:w="90"/><text x="42.2923%" y="302.50"></text></g><g><title>valid (sqlparse/engine/grouping.py:302) (69 samples, 0.15%)</title><rect x="42.0867%" y="308" width="0.1459%" height="15" fill="rgb(215,41,42)" fg:x="19899" fg:w="69"/><text x="42.3367%" y="318.50"></text></g><g><title>flatten (sqlparse/sql.py:213) (168 samples, 0.36%)</title><rect x="45.0815%" y="356" width="0.3553%" height="15" fill="rgb(224,123,36)" fg:x="21315" fg:w="168"/><text x="45.3315%" y="366.50"></text></g><g><title>flatten (sqlparse/sql.py:214) (253 samples, 0.54%)</title><rect x="45.4369%" y="356" width="0.5351%" height="15" fill="rgb(240,125,3)" fg:x="21483" fg:w="253"/><text x="45.6869%" y="366.50"></text></g><g><title>flatten (sqlparse/sql.py:213) (402 samples, 0.85%)</title><rect x="47.5603%" y="372" width="0.8502%" height="15" fill="rgb(205,98,50)" fg:x="22487" fg:w="402"/><text x="47.8103%" y="382.50"></text></g><g><title>flatten (sqlparse/sql.py:214) (274 samples, 0.58%)</title><rect x="48.4106%" y="372" width="0.5795%" height="15" fill="rgb(205,185,37)" fg:x="22889" fg:w="274"/><text x="48.6606%" y="382.50"></text></g><g><title>flatten (sqlparse/sql.py:213) (308 samples, 0.65%)</title><rect x="50.1703%" y="388" width="0.6514%" height="15" fill="rgb(238,207,15)" fg:x="23721" fg:w="308"/><text x="50.4203%" y="398.50"></text></g><g><title>flatten (sqlparse/sql.py:214) (91 samples, 0.19%)</title><rect x="50.8217%" y="388" width="0.1925%" height="15" fill="rgb(213,199,42)" fg:x="24029" fg:w="91"/><text x="51.0717%" y="398.50"></text></g><g><title>flatten (sqlparse/sql.py:215) (1,009 samples, 2.13%)</title><rect x="48.9901%" y="372" width="2.1340%" height="15" fill="rgb(235,201,11)" fg:x="23163" fg:w="1009"/><text x="49.2401%" y="382.50">f..</text></g><g><title>flatten (sqlparse/sql.py:215) (2,523 samples, 5.34%)</title><rect x="45.9720%" y="356" width="5.3362%" height="15" fill="rgb(207,46,11)" fg:x="21736" fg:w="2523"/><text x="46.2220%" y="366.50">flatten..</text></g><g><title>flatten (sqlparse/sql.py:217) (87 samples, 0.18%)</title><rect x="51.1241%" y="372" width="0.1840%" height="15" fill="rgb(241,35,35)" fg:x="24172" fg:w="87"/><text x="51.3741%" y="382.50"></text></g><g><title>group_tokens (sqlparse/sql.py:326) (4,291 samples, 9.08%)</title><rect x="42.4462%" y="308" width="9.0755%" height="15" fill="rgb(243,32,47)" fg:x="20069" fg:w="4291"/><text x="42.6962%" y="318.50">group_tokens ..</text></g><g><title>__str__ (sqlparse/sql.py:166) (4,251 samples, 8.99%)</title><rect x="42.5308%" y="324" width="8.9909%" height="15" fill="rgb(247,202,23)" fg:x="20109" fg:w="4251"/><text x="42.7808%" y="334.50">__str__ (sqlp..</text></g><g><title>&lt;genexpr&gt; (sqlparse/sql.py:166) (3,782 samples, 8.00%)</title><rect x="43.5228%" y="340" width="7.9990%" height="15" fill="rgb(219,102,11)" fg:x="20578" fg:w="3782"/><text x="43.7728%" y="350.50">&lt;genexpr&gt; (..</text></g><g><title>flatten (sqlparse/sql.py:217) (101 samples, 0.21%)</title><rect x="51.3081%" y="356" width="0.2136%" height="15" fill="rgb(243,110,44)" fg:x="24259" fg:w="101"/><text x="51.5581%" y="366.50"></text></g><g><title>group_tokens (sqlparse/sql.py:329) (54 samples, 0.11%)</title><rect x="51.5218%" y="308" width="0.1142%" height="15" fill="rgb(222,74,54)" fg:x="24360" fg:w="54"/><text x="51.7718%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:480) (4,454 samples, 9.42%)</title><rect x="42.2686%" y="292" width="9.4203%" height="15" fill="rgb(216,99,12)" fg:x="19985" fg:w="4454"/><text x="42.5186%" y="302.50">_group (sqlpa..</text></g><g><title>group_identifier_list (sqlparse/engine/grouping.py:308) (6,993 samples, 14.79%)</title><rect x="36.9239%" y="276" width="14.7903%" height="15" fill="rgb(226,22,26)" fg:x="17458" fg:w="6993"/><text x="37.1739%" y="286.50">group_identifier_list (..</text></g><g><title>_group_matching (sqlparse/engine/grouping.py:34) (110 samples, 0.23%)</title><rect x="51.9363%" y="292" width="0.2327%" height="15" fill="rgb(217,163,10)" fg:x="24556" fg:w="110"/><text x="52.1863%" y="302.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:37) (146 samples, 0.31%)</title><rect x="52.1689%" y="292" width="0.3088%" height="15" fill="rgb(213,25,53)" fg:x="24666" fg:w="146"/><text x="52.4189%" y="302.50"></text></g><g><title>group_if (sqlparse/engine/grouping.py:65) (505 samples, 1.07%)</title><rect x="51.7142%" y="276" width="1.0681%" height="15" fill="rgb(252,105,26)" fg:x="24451" fg:w="505"/><text x="51.9642%" y="286.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:40) (144 samples, 0.30%)</title><rect x="52.4777%" y="292" width="0.3046%" height="15" fill="rgb(220,39,43)" fg:x="24812" fg:w="144"/><text x="52.7277%" y="302.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:465) (78 samples, 0.16%)</title><rect x="53.1101%" y="308" width="0.1650%" height="15" fill="rgb(229,68,48)" fg:x="25111" fg:w="78"/><text x="53.3601%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (132 samples, 0.28%)</title><rect x="53.3534%" y="308" width="0.2792%" height="15" fill="rgb(252,8,32)" fg:x="25226" fg:w="132"/><text x="53.6034%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (139 samples, 0.29%)</title><rect x="53.6325%" y="308" width="0.2940%" height="15" fill="rgb(223,20,43)" fg:x="25358" fg:w="139"/><text x="53.8825%" y="318.50"></text></g><g><title>match (sqlparse/engine/grouping.py:274) (124 samples, 0.26%)</title><rect x="53.6643%" y="324" width="0.2623%" height="15" fill="rgb(229,81,49)" fg:x="25373" fg:w="124"/><text x="53.9143%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (405 samples, 0.86%)</title><rect x="53.0763%" y="292" width="0.8566%" height="15" fill="rgb(236,28,36)" fg:x="25095" fg:w="405"/><text x="53.3263%" y="302.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (249 samples, 0.53%)</title><rect x="53.9329%" y="292" width="0.5266%" height="15" fill="rgb(249,185,26)" fg:x="25500" fg:w="249"/><text x="54.1829%" y="302.50"></text></g><g><title>match (sqlparse/engine/grouping.py:274) (227 samples, 0.48%)</title><rect x="53.9794%" y="308" width="0.4801%" height="15" fill="rgb(249,174,33)" fg:x="25522" fg:w="227"/><text x="54.2294%" y="318.50"></text></g><g><title>group_operator (sqlparse/engine/grouping.py:287) (790 samples, 1.67%)</title><rect x="52.8183%" y="276" width="1.6709%" height="15" fill="rgb(233,201,37)" fg:x="24973" fg:w="790"/><text x="53.0683%" y="286.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:21) (72 samples, 0.15%)</title><rect x="54.4976%" y="292" width="0.1523%" height="15" fill="rgb(221,78,26)" fg:x="25767" fg:w="72"/><text x="54.7476%" y="302.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:37) (157 samples, 0.33%)</title><rect x="54.7852%" y="292" width="0.3321%" height="15" fill="rgb(250,127,30)" fg:x="25903" fg:w="157"/><text x="55.0352%" y="302.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:40) (160 samples, 0.34%)</title><rect x="55.1194%" y="292" width="0.3384%" height="15" fill="rgb(230,49,44)" fg:x="26061" fg:w="160"/><text x="55.3694%" y="302.50"></text></g><g><title>group_tokens (sqlparse/sql.py:329) (73 samples, 0.15%)</title><rect x="55.4726%" y="308" width="0.1544%" height="15" fill="rgb(229,67,23)" fg:x="26228" fg:w="73"/><text x="55.7226%" y="318.50"></text></g><g><title>__init__ (sqlparse/sql.py:162) (53 samples, 0.11%)</title><rect x="55.5149%" y="324" width="0.1121%" height="15" fill="rgb(249,83,47)" fg:x="26248" fg:w="53"/><text x="55.7649%" y="334.50"></text></g><g><title>_group_matching (sqlparse/engine/grouping.py:48) (92 samples, 0.19%)</title><rect x="55.4620%" y="292" width="0.1946%" height="15" fill="rgb(215,43,3)" fg:x="26223" fg:w="92"/><text x="55.7120%" y="302.50"></text></g><g><title>group_parenthesis (sqlparse/engine/grouping.py:57) (553 samples, 1.17%)</title><rect x="54.4891%" y="276" width="1.1696%" height="15" fill="rgb(238,154,13)" fg:x="25763" fg:w="553"/><text x="54.7391%" y="286.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (79 samples, 0.17%)</title><rect x="56.0902%" y="324" width="0.1671%" height="15" fill="rgb(219,56,2)" fg:x="26520" fg:w="79"/><text x="56.3402%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (105 samples, 0.22%)</title><rect x="56.0458%" y="308" width="0.2221%" height="15" fill="rgb(233,0,4)" fg:x="26499" fg:w="105"/><text x="56.2958%" y="318.50"></text></g><g><title>match (sqlparse/engine/grouping.py:145) (108 samples, 0.23%)</title><rect x="56.4244%" y="324" width="0.2284%" height="15" fill="rgb(235,30,7)" fg:x="26678" fg:w="108"/><text x="56.6744%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (184 samples, 0.39%)</title><rect x="56.2678%" y="308" width="0.3892%" height="15" fill="rgb(250,79,13)" fg:x="26604" fg:w="184"/><text x="56.5178%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (352 samples, 0.74%)</title><rect x="55.9210%" y="292" width="0.7445%" height="15" fill="rgb(211,146,34)" fg:x="26440" fg:w="352"/><text x="56.1710%" y="302.50"></text></g><g><title>match (sqlparse/engine/grouping.py:142) (102 samples, 0.22%)</title><rect x="56.7162%" y="308" width="0.2157%" height="15" fill="rgb(228,22,38)" fg:x="26816" fg:w="102"/><text x="56.9662%" y="318.50"></text></g><g><title>match (sqlparse/sql.py:101) (64 samples, 0.14%)</title><rect x="57.2979%" y="324" width="0.1354%" height="15" fill="rgb(235,168,5)" fg:x="27091" fg:w="64"/><text x="57.5479%" y="334.50"></text></g><g><title>match (sqlparse/engine/grouping.py:145) (217 samples, 0.46%)</title><rect x="57.0250%" y="308" width="0.4590%" height="15" fill="rgb(221,155,16)" fg:x="26962" fg:w="217"/><text x="57.2750%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (393 samples, 0.83%)</title><rect x="56.6655%" y="292" width="0.8312%" height="15" fill="rgb(215,215,53)" fg:x="26792" fg:w="393"/><text x="56.9155%" y="302.50"></text></g><g><title>group_period (sqlparse/engine/grouping.py:167) (873 samples, 1.85%)</title><rect x="55.6778%" y="276" width="1.8464%" height="15" fill="rgb(223,4,10)" fg:x="26325" fg:w="873"/><text x="55.9278%" y="286.50">g..</text></g><g><title>_group (sqlparse/engine/grouping.py:474) (52 samples, 0.11%)</title><rect x="57.8499%" y="308" width="0.1100%" height="15" fill="rgb(234,103,6)" fg:x="27352" fg:w="52"/><text x="58.0999%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (65 samples, 0.14%)</title><rect x="57.9599%" y="308" width="0.1375%" height="15" fill="rgb(227,97,0)" fg:x="27404" fg:w="65"/><text x="58.2099%" y="318.50"></text></g><g><title>match (sqlparse/engine/grouping.py:78) (55 samples, 0.12%)</title><rect x="57.9810%" y="324" width="0.1163%" height="15" fill="rgb(234,150,53)" fg:x="27414" fg:w="55"/><text x="58.2310%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (177 samples, 0.37%)</title><rect x="57.7399%" y="292" width="0.3744%" height="15" fill="rgb(228,201,54)" fg:x="27300" fg:w="177"/><text x="57.9899%" y="302.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (127 samples, 0.27%)</title><rect x="58.1143%" y="292" width="0.2686%" height="15" fill="rgb(222,22,37)" fg:x="27477" fg:w="127"/><text x="58.3643%" y="302.50"></text></g><g><title>match (sqlparse/engine/grouping.py:78) (99 samples, 0.21%)</title><rect x="58.1735%" y="308" width="0.2094%" height="15" fill="rgb(237,53,32)" fg:x="27505" fg:w="99"/><text x="58.4235%" y="318.50"></text></g><g><title>group_typecasts (sqlparse/engine/grouping.py:87) (413 samples, 0.87%)</title><rect x="57.5305%" y="276" width="0.8735%" height="15" fill="rgb(233,25,53)" fg:x="27201" fg:w="413"/><text x="57.7805%" y="286.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:465) (78 samples, 0.16%)</title><rect x="58.7340%" y="308" width="0.1650%" height="15" fill="rgb(210,40,34)" fg:x="27770" fg:w="78"/><text x="58.9840%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (48 samples, 0.10%)</title><rect x="59.1845%" y="340" width="0.1015%" height="15" fill="rgb(241,220,44)" fg:x="27983" fg:w="48"/><text x="59.4345%" y="350.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (103 samples, 0.22%)</title><rect x="59.0745%" y="324" width="0.2178%" height="15" fill="rgb(235,28,35)" fg:x="27931" fg:w="103"/><text x="59.3245%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (110 samples, 0.23%)</title><rect x="59.2923%" y="324" width="0.2327%" height="15" fill="rgb(210,56,17)" fg:x="28034" fg:w="110"/><text x="59.5423%" y="334.50"></text></g><g><title>match (sqlparse/engine/grouping.py:117) (104 samples, 0.22%)</title><rect x="59.3050%" y="340" width="0.2200%" height="15" fill="rgb(224,130,29)" fg:x="28040" fg:w="104"/><text x="59.5550%" y="350.50"></text></g><g><title>imt (sqlparse/utils.py:95) (82 samples, 0.17%)</title><rect x="59.3515%" y="356" width="0.1734%" height="15" fill="rgb(235,212,8)" fg:x="28062" fg:w="82"/><text x="59.6015%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sqlparse/utils.py:95) (54 samples, 0.11%)</title><rect x="59.4108%" y="372" width="0.1142%" height="15" fill="rgb(223,33,50)" fg:x="28090" fg:w="54"/><text x="59.6608%" y="382.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (256 samples, 0.54%)</title><rect x="58.9920%" y="308" width="0.5414%" height="15" fill="rgb(219,149,13)" fg:x="27892" fg:w="256"/><text x="59.2420%" y="318.50"></text></g><g><title>imt (sqlparse/utils.py:95) (282 samples, 0.60%)</title><rect x="59.7280%" y="340" width="0.5964%" height="15" fill="rgb(250,156,29)" fg:x="28240" fg:w="282"/><text x="59.9780%" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sqlparse/utils.py:95) (189 samples, 0.40%)</title><rect x="59.9247%" y="356" width="0.3997%" height="15" fill="rgb(216,193,19)" fg:x="28333" fg:w="189"/><text x="60.1747%" y="366.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (376 samples, 0.80%)</title><rect x="59.5334%" y="308" width="0.7952%" height="15" fill="rgb(216,135,14)" fg:x="28148" fg:w="376"/><text x="59.7834%" y="318.50"></text></g><g><title>match (sqlparse/engine/grouping.py:117) (362 samples, 0.77%)</title><rect x="59.5630%" y="324" width="0.7656%" height="15" fill="rgb(241,47,5)" fg:x="28162" fg:w="362"/><text x="59.8130%" y="334.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (778 samples, 1.65%)</title><rect x="58.7022%" y="292" width="1.6455%" height="15" fill="rgb(233,42,35)" fg:x="27755" fg:w="778"/><text x="58.9522%" y="302.50"></text></g><g><title>imt (sqlparse/utils.py:95) (388 samples, 0.82%)</title><rect x="60.6861%" y="324" width="0.8206%" height="15" fill="rgb(231,13,6)" fg:x="28693" fg:w="388"/><text x="60.9361%" y="334.50"></text></g><g><title>&lt;genexpr&gt; (sqlparse/utils.py:95) (253 samples, 0.54%)</title><rect x="60.9716%" y="340" width="0.5351%" height="15" fill="rgb(207,181,40)" fg:x="28828" fg:w="253"/><text x="61.2216%" y="350.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (552 samples, 1.17%)</title><rect x="60.3477%" y="292" width="1.1675%" height="15" fill="rgb(254,173,49)" fg:x="28533" fg:w="552"/><text x="60.5977%" y="302.50"></text></g><g><title>match (sqlparse/engine/grouping.py:117) (539 samples, 1.14%)</title><rect x="60.3752%" y="308" width="1.1400%" height="15" fill="rgb(221,1,38)" fg:x="28546" fg:w="539"/><text x="60.6252%" y="318.50"></text></g><g><title>group_typed_literal (sqlparse/engine/grouping.py:134) (1,467 samples, 3.10%)</title><rect x="58.4315%" y="276" width="3.1027%" height="15" fill="rgb(206,124,46)" fg:x="27627" fg:w="1467"/><text x="58.6815%" y="286.50">gro..</text></g><g><title>_group (sqlparse/engine/grouping.py:465) (80 samples, 0.17%)</title><rect x="61.8198%" y="308" width="0.1692%" height="15" fill="rgb(249,21,11)" fg:x="29229" fg:w="80"/><text x="62.0698%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (112 samples, 0.24%)</title><rect x="62.0651%" y="308" width="0.2369%" height="15" fill="rgb(222,201,40)" fg:x="29345" fg:w="112"/><text x="62.3151%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (302 samples, 0.64%)</title><rect x="61.7627%" y="292" width="0.6387%" height="15" fill="rgb(235,61,29)" fg:x="29202" fg:w="302"/><text x="62.0127%" y="302.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (67 samples, 0.14%)</title><rect x="62.4014%" y="292" width="0.1417%" height="15" fill="rgb(219,207,3)" fg:x="29504" fg:w="67"/><text x="62.6514%" y="302.50"></text></g><g><title>group_typed_literal (sqlparse/engine/grouping.py:136) (483 samples, 1.02%)</title><rect x="61.5342%" y="276" width="1.0216%" height="15" fill="rgb(222,56,46)" fg:x="29094" fg:w="483"/><text x="61.7842%" y="286.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (48 samples, 0.10%)</title><rect x="62.8773%" y="308" width="0.1015%" height="15" fill="rgb(239,76,54)" fg:x="29729" fg:w="48"/><text x="63.1273%" y="318.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:474) (137 samples, 0.29%)</title><rect x="62.7800%" y="292" width="0.2898%" height="15" fill="rgb(231,124,27)" fg:x="29683" fg:w="137"/><text x="63.0300%" y="302.50"></text></g><g><title>_group (sqlparse/engine/grouping.py:476) (102 samples, 0.22%)</title><rect x="63.0697%" y="292" width="0.2157%" height="15" fill="rgb(249,195,6)" fg:x="29820" fg:w="102"/><text x="63.3197%" y="302.50"></text></g><g><title>match (sqlparse/engine/grouping.py:92) (82 samples, 0.17%)</title><rect x="63.1120%" y="308" width="0.1734%" height="15" fill="rgb(237,174,47)" fg:x="29840" fg:w="82"/><text x="63.3620%" y="318.50"></text></g><g><title>group_tzcasts (sqlparse/engine/grouping.py:107) (357 samples, 0.76%)</title><rect x="62.5558%" y="276" width="0.7551%" height="15" fill="rgb(206,201,31)" fg:x="29577" fg:w="357"/><text x="62.8058%" y="286.50"></text></g><g><title>imt (sqlparse/utils.py:97) (49 samples, 0.10%)</title><rect x="63.4589%" y="340" width="0.1036%" height="15" fill="rgb(231,57,52)" fg:x="30004" fg:w="49"/><text x="63.7089%" y="350.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (92 samples, 0.19%)</title><rect x="63.3722%" y="308" width="0.1946%" height="15" fill="rgb(248,177,22)" fg:x="29963" fg:w="92"/><text x="63.6222%" y="318.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (85 samples, 0.18%)</title><rect x="63.3870%" y="324" width="0.1798%" height="15" fill="rgb(215,211,37)" fg:x="29970" fg:w="85"/><text x="63.6370%" y="334.50"></text></g><g><title>group_values (sqlparse/engine/grouping.py:407) (118 samples, 0.25%)</title><rect x="63.3235%" y="276" width="0.2496%" height="15" fill="rgb(241,128,51)" fg:x="29940" fg:w="118"/><text x="63.5735%" y="286.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (115 samples, 0.24%)</title><rect x="63.3299%" y="292" width="0.2432%" height="15" fill="rgb(227,165,31)" fg:x="29943" fg:w="115"/><text x="63.5799%" y="302.50"></text></g><g><title>get_sublists (sqlparse/sql.py:220) (54 samples, 0.11%)</title><rect x="63.7571%" y="292" width="0.1142%" height="15" fill="rgb(228,167,24)" fg:x="30145" fg:w="54"/><text x="64.0071%" y="302.50"></text></g><g><title>get_sublists (sqlparse/sql.py:221) (101 samples, 0.21%)</title><rect x="63.8713%" y="292" width="0.2136%" height="15" fill="rgb(228,143,12)" fg:x="30199" fg:w="101"/><text x="64.1213%" y="302.50"></text></g><g><title>wrapped_f (sqlparse/utils.py:71) (216 samples, 0.46%)</title><rect x="63.6641%" y="276" width="0.4568%" height="15" fill="rgb(249,149,8)" fg:x="30101" fg:w="216"/><text x="63.9141%" y="286.50"></text></g><g><title>get_sublists (sqlparse/sql.py:220) (59 samples, 0.12%)</title><rect x="64.3599%" y="308" width="0.1248%" height="15" fill="rgb(243,35,44)" fg:x="30430" fg:w="59"/><text x="64.6099%" y="318.50"></text></g><g><title>wrapped_f (sqlparse/utils.py:71) (188 samples, 0.40%)</title><rect x="64.2140%" y="292" width="0.3976%" height="15" fill="rgb(246,89,9)" fg:x="30361" fg:w="188"/><text x="64.4640%" y="302.50"></text></g><g><title>wrapped_f (sqlparse/utils.py:71) (77 samples, 0.16%)</title><rect x="64.6750%" y="308" width="0.1629%" height="15" fill="rgb(233,213,13)" fg:x="30579" fg:w="77"/><text x="64.9250%" y="318.50"></text></g><g><title>align_comments (sqlparse/engine/grouping.py:397) (94 samples, 0.20%)</title><rect x="64.9648%" y="340" width="0.1988%" height="15" fill="rgb(233,141,41)" fg:x="30716" fg:w="94"/><text x="65.2148%" y="350.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (71 samples, 0.15%)</title><rect x="65.0134%" y="356" width="0.1502%" height="15" fill="rgb(239,167,4)" fg:x="30739" fg:w="71"/><text x="65.2634%" y="366.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (54 samples, 0.11%)</title><rect x="65.3413%" y="372" width="0.1142%" height="15" fill="rgb(209,217,16)" fg:x="30894" fg:w="54"/><text x="65.5913%" y="382.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (50 samples, 0.11%)</title><rect x="65.3497%" y="388" width="0.1058%" height="15" fill="rgb(219,88,35)" fg:x="30898" fg:w="50"/><text x="65.5997%" y="398.50"></text></g><g><title>group_aliased (sqlparse/engine/grouping.py:347) (121 samples, 0.26%)</title><rect x="65.2059%" y="340" width="0.2559%" height="15" fill="rgb(220,193,23)" fg:x="30830" fg:w="121"/><text x="65.4559%" y="350.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (99 samples, 0.21%)</title><rect x="65.2524%" y="356" width="0.2094%" height="15" fill="rgb(230,90,52)" fg:x="30852" fg:w="99"/><text x="65.5024%" y="366.50"></text></g><g><title>wrapped_f (sqlparse/utils.py:73) (299 samples, 0.63%)</title><rect x="64.8421%" y="308" width="0.6324%" height="15" fill="rgb(252,106,19)" fg:x="30658" fg:w="299"/><text x="65.0921%" y="318.50"></text></g><g><title>wrapped_f (sqlparse/utils.py:74) (243 samples, 0.51%)</title><rect x="64.9606%" y="324" width="0.5139%" height="15" fill="rgb(206,74,20)" fg:x="30714" fg:w="243"/><text x="65.2106%" y="334.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (83 samples, 0.18%)</title><rect x="65.8764%" y="356" width="0.1755%" height="15" fill="rgb(230,138,44)" fg:x="31147" fg:w="83"/><text x="66.1264%" y="366.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (69 samples, 0.15%)</title><rect x="65.9060%" y="372" width="0.1459%" height="15" fill="rgb(235,182,43)" fg:x="31161" fg:w="69"/><text x="66.1560%" y="382.50"></text></g><g><title>align_comments (sqlparse/engine/grouping.py:397) (252 samples, 0.53%)</title><rect x="65.5231%" y="324" width="0.5330%" height="15" fill="rgb(242,16,51)" fg:x="30980" fg:w="252"/><text x="65.7731%" y="334.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (211 samples, 0.45%)</title><rect x="65.6099%" y="340" width="0.4463%" height="15" fill="rgb(248,9,4)" fg:x="31021" fg:w="211"/><text x="65.8599%" y="350.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (96 samples, 0.20%)</title><rect x="66.4284%" y="356" width="0.2030%" height="15" fill="rgb(210,31,22)" fg:x="31408" fg:w="96"/><text x="66.6784%" y="366.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (86 samples, 0.18%)</title><rect x="66.4495%" y="372" width="0.1819%" height="15" fill="rgb(239,54,39)" fg:x="31418" fg:w="86"/><text x="66.6995%" y="382.50"></text></g><g><title>group_aliased (sqlparse/engine/grouping.py:347) (248 samples, 0.52%)</title><rect x="66.1111%" y="324" width="0.5245%" height="15" fill="rgb(230,99,41)" fg:x="31258" fg:w="248"/><text x="66.3611%" y="334.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (207 samples, 0.44%)</title><rect x="66.1978%" y="340" width="0.4378%" height="15" fill="rgb(253,106,12)" fg:x="31299" fg:w="207"/><text x="66.4478%" y="350.50"></text></g><g><title>group_aliased (sqlparse/engine/grouping.py:349) (78 samples, 0.16%)</title><rect x="66.6420%" y="324" width="0.1650%" height="15" fill="rgb(213,46,41)" fg:x="31509" fg:w="78"/><text x="66.8920%" y="334.50"></text></g><g><title>token_next (sqlparse/sql.py:301) (53 samples, 0.11%)</title><rect x="66.6949%" y="340" width="0.1121%" height="15" fill="rgb(215,133,35)" fg:x="31534" fg:w="53"/><text x="66.9449%" y="350.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (104 samples, 0.22%)</title><rect x="66.9931%" y="356" width="0.2200%" height="15" fill="rgb(213,28,5)" fg:x="31675" fg:w="104"/><text x="67.2431%" y="366.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (94 samples, 0.20%)</title><rect x="67.0142%" y="372" width="0.1988%" height="15" fill="rgb(215,77,49)" fg:x="31685" fg:w="94"/><text x="67.2642%" y="382.50"></text></g><g><title>group_aliased (sqlparse/engine/grouping.py:352) (187 samples, 0.40%)</title><rect x="66.8197%" y="324" width="0.3955%" height="15" fill="rgb(248,100,22)" fg:x="31593" fg:w="187"/><text x="67.0697%" y="334.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (162 samples, 0.34%)</title><rect x="66.8725%" y="340" width="0.3426%" height="15" fill="rgb(208,67,9)" fg:x="31618" fg:w="162"/><text x="67.1225%" y="350.50"></text></g><g><title>__init__ (sqlparse/sql.py:162) (86 samples, 0.18%)</title><rect x="67.3336%" y="356" width="0.1819%" height="15" fill="rgb(219,133,21)" fg:x="31836" fg:w="86"/><text x="67.5836%" y="366.50"></text></g><g><title>group_tokens (sqlparse/sql.py:329) (105 samples, 0.22%)</title><rect x="67.2998%" y="340" width="0.2221%" height="15" fill="rgb(246,46,29)" fg:x="31820" fg:w="105"/><text x="67.5498%" y="350.50"></text></g><g><title>group_identifier (sqlparse/engine/grouping.py:234) (140 samples, 0.30%)</title><rect x="67.2553%" y="324" width="0.2961%" height="15" fill="rgb(246,185,52)" fg:x="31799" fg:w="140"/><text x="67.5053%" y="334.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (68 samples, 0.14%)</title><rect x="67.6424%" y="356" width="0.1438%" height="15" fill="rgb(252,136,11)" fg:x="31982" fg:w="68"/><text x="67.8924%" y="366.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (62 samples, 0.13%)</title><rect x="67.6551%" y="372" width="0.1311%" height="15" fill="rgb(219,138,53)" fg:x="31988" fg:w="62"/><text x="67.9051%" y="382.50"></text></g><g><title>group_identifier (sqlparse/engine/grouping.py:235) (113 samples, 0.24%)</title><rect x="67.5514%" y="324" width="0.2390%" height="15" fill="rgb(211,51,23)" fg:x="31939" fg:w="113"/><text x="67.8014%" y="334.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (107 samples, 0.23%)</title><rect x="67.5641%" y="340" width="0.2263%" height="15" fill="rgb(247,221,28)" fg:x="31945" fg:w="107"/><text x="67.8141%" y="350.50"></text></g><g><title>group_order (sqlparse/engine/grouping.py:386) (88 samples, 0.19%)</title><rect x="67.7904%" y="324" width="0.1861%" height="15" fill="rgb(251,222,45)" fg:x="32052" fg:w="88"/><text x="68.0404%" y="334.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (86 samples, 0.18%)</title><rect x="67.7947%" y="340" width="0.1819%" height="15" fill="rgb(217,162,53)" fg:x="32054" fg:w="86"/><text x="68.0447%" y="350.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (66 samples, 0.14%)</title><rect x="67.8370%" y="356" width="0.1396%" height="15" fill="rgb(229,93,14)" fg:x="32074" fg:w="66"/><text x="68.0870%" y="366.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (56 samples, 0.12%)</title><rect x="67.8581%" y="372" width="0.1184%" height="15" fill="rgb(209,67,49)" fg:x="32084" fg:w="56"/><text x="68.1081%" y="382.50"></text></g><g><title>wrapped_f (sqlparse/utils.py:73) (1,659 samples, 3.51%)</title><rect x="64.6370%" y="292" width="3.5088%" height="15" fill="rgb(213,87,29)" fg:x="30561" fg:w="1659"/><text x="64.8870%" y="302.50">wra..</text></g><g><title>wrapped_f (sqlparse/utils.py:74) (1,263 samples, 2.67%)</title><rect x="65.4745%" y="308" width="2.6713%" height="15" fill="rgb(205,151,52)" fg:x="30957" fg:w="1263"/><text x="65.7245%" y="318.50">wr..</text></g><g><title>group_where (sqlparse/engine/grouping.py:327) (79 samples, 0.17%)</title><rect x="67.9787%" y="324" width="0.1671%" height="15" fill="rgb(253,215,39)" fg:x="32141" fg:w="79"/><text x="68.2287%" y="334.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (78 samples, 0.16%)</title><rect x="67.9808%" y="340" width="0.1650%" height="15" fill="rgb(221,220,41)" fg:x="32142" fg:w="78"/><text x="68.2308%" y="350.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (62 samples, 0.13%)</title><rect x="68.0146%" y="356" width="0.1311%" height="15" fill="rgb(218,133,21)" fg:x="32158" fg:w="62"/><text x="68.2646%" y="366.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (55 samples, 0.12%)</title><rect x="68.0294%" y="372" width="0.1163%" height="15" fill="rgb(221,193,43)" fg:x="32165" fg:w="55"/><text x="68.2794%" y="382.50"></text></g><g><title>imt (sqlparse/utils.py:91) (48 samples, 0.10%)</title><rect x="68.8078%" y="372" width="0.1015%" height="15" fill="rgb(240,128,52)" fg:x="32533" fg:w="48"/><text x="69.0578%" y="382.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (158 samples, 0.33%)</title><rect x="68.5941%" y="340" width="0.3342%" height="15" fill="rgb(253,114,12)" fg:x="32432" fg:w="158"/><text x="68.8441%" y="350.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (124 samples, 0.26%)</title><rect x="68.6661%" y="356" width="0.2623%" height="15" fill="rgb(215,223,47)" fg:x="32466" fg:w="124"/><text x="68.9161%" y="366.50"></text></g><g><title>align_comments (sqlparse/engine/grouping.py:397) (340 samples, 0.72%)</title><rect x="68.2113%" y="308" width="0.7191%" height="15" fill="rgb(248,225,23)" fg:x="32251" fg:w="340"/><text x="68.4613%" y="318.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (303 samples, 0.64%)</title><rect x="68.2896%" y="324" width="0.6408%" height="15" fill="rgb(250,108,0)" fg:x="32288" fg:w="303"/><text x="68.5396%" y="334.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (89 samples, 0.19%)</title><rect x="69.3429%" y="340" width="0.1882%" height="15" fill="rgb(228,208,7)" fg:x="32786" fg:w="89"/><text x="69.5929%" y="350.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (80 samples, 0.17%)</title><rect x="69.3619%" y="356" width="0.1692%" height="15" fill="rgb(244,45,10)" fg:x="32795" fg:w="80"/><text x="69.6119%" y="366.50"></text></g><g><title>group_aliased (sqlparse/engine/grouping.py:347) (239 samples, 0.51%)</title><rect x="69.0341%" y="308" width="0.5055%" height="15" fill="rgb(207,125,25)" fg:x="32640" fg:w="239"/><text x="69.2841%" y="318.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (193 samples, 0.41%)</title><rect x="69.1314%" y="324" width="0.4082%" height="15" fill="rgb(210,195,18)" fg:x="32686" fg:w="193"/><text x="69.3814%" y="334.50"></text></g><g><title>group_aliased (sqlparse/engine/grouping.py:349) (192 samples, 0.41%)</title><rect x="69.5480%" y="308" width="0.4061%" height="15" fill="rgb(249,80,12)" fg:x="32883" fg:w="192"/><text x="69.7980%" y="318.50"></text></g><g><title>token_next (sqlparse/sql.py:301) (131 samples, 0.28%)</title><rect x="69.6770%" y="324" width="0.2771%" height="15" fill="rgb(221,65,9)" fg:x="32944" fg:w="131"/><text x="69.9270%" y="334.50"></text></g><g><title>imt (sqlparse/utils.py:103) (105 samples, 0.22%)</title><rect x="70.6098%" y="372" width="0.2221%" height="15" fill="rgb(235,49,36)" fg:x="33385" fg:w="105"/><text x="70.8598%" y="382.50"></text></g><g><title>__contains__ (sqlparse/tokens.py:19) (69 samples, 0.15%)</title><rect x="70.6859%" y="388" width="0.1459%" height="15" fill="rgb(225,32,20)" fg:x="33421" fg:w="69"/><text x="70.9359%" y="398.50"></text></g><g><title>imt (sqlparse/utils.py:91) (84 samples, 0.18%)</title><rect x="70.8509%" y="372" width="0.1777%" height="15" fill="rgb(215,141,46)" fg:x="33499" fg:w="84"/><text x="71.1009%" y="382.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (313 samples, 0.66%)</title><rect x="70.4004%" y="340" width="0.6620%" height="15" fill="rgb(250,160,47)" fg:x="33286" fg:w="313"/><text x="70.6504%" y="350.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (286 samples, 0.60%)</title><rect x="70.4575%" y="356" width="0.6049%" height="15" fill="rgb(216,222,40)" fg:x="33313" fg:w="286"/><text x="70.7075%" y="366.50"></text></g><g><title>group_aliased (sqlparse/engine/grouping.py:352) (512 samples, 1.08%)</title><rect x="69.9964%" y="308" width="1.0829%" height="15" fill="rgb(234,217,39)" fg:x="33095" fg:w="512"/><text x="70.2464%" y="318.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (447 samples, 0.95%)</title><rect x="70.1339%" y="324" width="0.9454%" height="15" fill="rgb(207,178,40)" fg:x="33160" fg:w="447"/><text x="70.3839%" y="334.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (66 samples, 0.14%)</title><rect x="71.2485%" y="340" width="0.1396%" height="15" fill="rgb(221,136,13)" fg:x="33687" fg:w="66"/><text x="71.4985%" y="350.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (58 samples, 0.12%)</title><rect x="71.2654%" y="356" width="0.1227%" height="15" fill="rgb(249,199,10)" fg:x="33695" fg:w="58"/><text x="71.5154%" y="366.50"></text></g><g><title>group_functions (sqlparse/engine/grouping.py:370) (92 samples, 0.19%)</title><rect x="71.1956%" y="308" width="0.1946%" height="15" fill="rgb(249,222,13)" fg:x="33662" fg:w="92"/><text x="71.4456%" y="318.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (89 samples, 0.19%)</title><rect x="71.2020%" y="324" width="0.1882%" height="15" fill="rgb(244,185,38)" fg:x="33665" fg:w="89"/><text x="71.4520%" y="334.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (71 samples, 0.15%)</title><rect x="71.5552%" y="340" width="0.1502%" height="15" fill="rgb(236,202,9)" fg:x="33832" fg:w="71"/><text x="71.8052%" y="350.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (61 samples, 0.13%)</title><rect x="71.5763%" y="356" width="0.1290%" height="15" fill="rgb(250,229,37)" fg:x="33842" fg:w="61"/><text x="71.8263%" y="366.50"></text></g><g><title>group_functions (sqlparse/engine/grouping.py:380) (110 samples, 0.23%)</title><rect x="71.4769%" y="308" width="0.2327%" height="15" fill="rgb(206,174,23)" fg:x="33795" fg:w="110"/><text x="71.7269%" y="318.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (101 samples, 0.21%)</title><rect x="71.4959%" y="324" width="0.2136%" height="15" fill="rgb(211,33,43)" fg:x="33804" fg:w="101"/><text x="71.7459%" y="334.50"></text></g><g><title>group_identifier (sqlparse/engine/grouping.py:232) (115 samples, 0.24%)</title><rect x="71.7201%" y="308" width="0.2432%" height="15" fill="rgb(245,58,50)" fg:x="33910" fg:w="115"/><text x="71.9701%" y="318.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (107 samples, 0.23%)</title><rect x="71.7371%" y="324" width="0.2263%" height="15" fill="rgb(244,68,36)" fg:x="33918" fg:w="107"/><text x="71.9871%" y="334.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (66 samples, 0.14%)</title><rect x="71.8238%" y="340" width="0.1396%" height="15" fill="rgb(232,229,15)" fg:x="33959" fg:w="66"/><text x="72.0738%" y="350.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (58 samples, 0.12%)</title><rect x="71.8407%" y="356" width="0.1227%" height="15" fill="rgb(254,30,23)" fg:x="33967" fg:w="58"/><text x="72.0907%" y="366.50"></text></g><g><title>group_tokens (sqlparse/sql.py:329) (90 samples, 0.19%)</title><rect x="71.9782%" y="324" width="0.1904%" height="15" fill="rgb(235,160,14)" fg:x="34032" fg:w="90"/><text x="72.2282%" y="334.50"></text></g><g><title>__init__ (sqlparse/sql.py:162) (67 samples, 0.14%)</title><rect x="72.0268%" y="340" width="0.1417%" height="15" fill="rgb(212,155,44)" fg:x="34055" fg:w="67"/><text x="72.2768%" y="350.50"></text></g><g><title>group_identifier (sqlparse/engine/grouping.py:234) (109 samples, 0.23%)</title><rect x="71.9634%" y="308" width="0.2305%" height="15" fill="rgb(226,2,50)" fg:x="34025" fg:w="109"/><text x="72.2134%" y="318.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (57 samples, 0.12%)</title><rect x="72.2722%" y="340" width="0.1206%" height="15" fill="rgb(234,177,6)" fg:x="34171" fg:w="57"/><text x="72.5222%" y="350.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (50 samples, 0.11%)</title><rect x="72.2870%" y="356" width="0.1058%" height="15" fill="rgb(217,24,9)" fg:x="34178" fg:w="50"/><text x="72.5370%" y="366.50"></text></g><g><title>group_identifier (sqlparse/engine/grouping.py:235) (95 samples, 0.20%)</title><rect x="72.1939%" y="308" width="0.2009%" height="15" fill="rgb(220,13,46)" fg:x="34134" fg:w="95"/><text x="72.4439%" y="318.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (88 samples, 0.19%)</title><rect x="72.2087%" y="324" width="0.1861%" height="15" fill="rgb(239,221,27)" fg:x="34141" fg:w="88"/><text x="72.4587%" y="334.50"></text></g><g><title>imt (sqlparse/utils.py:103) (69 samples, 0.15%)</title><rect x="72.6613%" y="372" width="0.1459%" height="15" fill="rgb(222,198,25)" fg:x="34355" fg:w="69"/><text x="72.9113%" y="382.50"></text></g><g><title>__contains__ (sqlparse/tokens.py:19) (50 samples, 0.11%)</title><rect x="72.7015%" y="388" width="0.1058%" height="15" fill="rgb(211,99,13)" fg:x="34374" fg:w="50"/><text x="72.9515%" y="398.50"></text></g><g><title>group_order (sqlparse/engine/grouping.py:386) (210 samples, 0.44%)</title><rect x="72.3948%" y="308" width="0.4442%" height="15" fill="rgb(232,111,31)" fg:x="34229" fg:w="210"/><text x="72.6448%" y="318.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (200 samples, 0.42%)</title><rect x="72.4160%" y="324" width="0.4230%" height="15" fill="rgb(245,82,37)" fg:x="34239" fg:w="200"/><text x="72.6660%" y="334.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (155 samples, 0.33%)</title><rect x="72.5112%" y="340" width="0.3278%" height="15" fill="rgb(227,149,46)" fg:x="34284" fg:w="155"/><text x="72.7612%" y="350.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (136 samples, 0.29%)</title><rect x="72.5513%" y="356" width="0.2876%" height="15" fill="rgb(218,36,50)" fg:x="34303" fg:w="136"/><text x="72.8013%" y="366.50"></text></g><g><title>group_over (sqlparse/engine/grouping.py:240) (170 samples, 0.36%)</title><rect x="72.8390%" y="308" width="0.3596%" height="15" fill="rgb(226,80,48)" fg:x="34439" fg:w="170"/><text x="73.0890%" y="318.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (167 samples, 0.35%)</title><rect x="72.8453%" y="324" width="0.3532%" height="15" fill="rgb(238,224,15)" fg:x="34442" fg:w="167"/><text x="73.0953%" y="334.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (135 samples, 0.29%)</title><rect x="72.9130%" y="340" width="0.2855%" height="15" fill="rgb(241,136,10)" fg:x="34474" fg:w="135"/><text x="73.1630%" y="350.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (120 samples, 0.25%)</title><rect x="72.9447%" y="356" width="0.2538%" height="15" fill="rgb(208,32,45)" fg:x="34489" fg:w="120"/><text x="73.1947%" y="366.50"></text></g><g><title>imt (sqlparse/utils.py:97) (66 samples, 0.14%)</title><rect x="73.0589%" y="372" width="0.1396%" height="15" fill="rgb(207,135,9)" fg:x="34543" fg:w="66"/><text x="73.3089%" y="382.50"></text></g><g><title>wrapped_f (sqlparse/utils.py:73) (4,347 samples, 9.19%)</title><rect x="64.1547%" y="276" width="9.1940%" height="15" fill="rgb(206,86,44)" fg:x="30333" fg:w="4347"/><text x="64.4047%" y="286.50">wrapped_f (sq..</text></g><g><title>wrapped_f (sqlparse/utils.py:74) (2,460 samples, 5.20%)</title><rect x="68.1458%" y="292" width="5.2029%" height="15" fill="rgb(245,177,15)" fg:x="32220" fg:w="2460"/><text x="68.3958%" y="302.50">wrappe..</text></g><g><title>group_where (sqlparse/engine/grouping.py:327) (71 samples, 0.15%)</title><rect x="73.1985%" y="308" width="0.1502%" height="15" fill="rgb(206,64,50)" fg:x="34609" fg:w="71"/><text x="73.4485%" y="318.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (71 samples, 0.15%)</title><rect x="73.1985%" y="324" width="0.1502%" height="15" fill="rgb(234,36,40)" fg:x="34609" fg:w="71"/><text x="73.4485%" y="334.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (55 samples, 0.12%)</title><rect x="73.2324%" y="340" width="0.1163%" height="15" fill="rgb(213,64,8)" fg:x="34625" fg:w="55"/><text x="73.4824%" y="350.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (49 samples, 0.10%)</title><rect x="73.2451%" y="356" width="0.1036%" height="15" fill="rgb(210,75,36)" fg:x="34631" fg:w="49"/><text x="73.4951%" y="366.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (106 samples, 0.22%)</title><rect x="73.5010%" y="324" width="0.2242%" height="15" fill="rgb(229,88,21)" fg:x="34752" fg:w="106"/><text x="73.7510%" y="334.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (83 samples, 0.18%)</title><rect x="73.5496%" y="340" width="0.1755%" height="15" fill="rgb(252,204,47)" fg:x="34775" fg:w="83"/><text x="73.7996%" y="350.50"></text></g><g><title>align_comments (sqlparse/engine/grouping.py:397) (159 samples, 0.34%)</title><rect x="73.3910%" y="292" width="0.3363%" height="15" fill="rgb(208,77,27)" fg:x="34700" fg:w="159"/><text x="73.6410%" y="302.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (152 samples, 0.32%)</title><rect x="73.4058%" y="308" width="0.3215%" height="15" fill="rgb(221,76,26)" fg:x="34707" fg:w="152"/><text x="73.6558%" y="318.50"></text></g><g><title>group_aliased (sqlparse/engine/grouping.py:347) (51 samples, 0.11%)</title><rect x="73.7336%" y="292" width="0.1079%" height="15" fill="rgb(225,139,18)" fg:x="34862" fg:w="51"/><text x="73.9836%" y="302.50"></text></g><g><title>group_aliased (sqlparse/engine/grouping.py:349) (129 samples, 0.27%)</title><rect x="73.8457%" y="292" width="0.2728%" height="15" fill="rgb(230,137,11)" fg:x="34915" fg:w="129"/><text x="74.0957%" y="302.50"></text></g><g><title>token_next (sqlparse/sql.py:301) (93 samples, 0.20%)</title><rect x="73.9219%" y="308" width="0.1967%" height="15" fill="rgb(212,28,1)" fg:x="34951" fg:w="93"/><text x="74.1719%" y="318.50"></text></g><g><title>imt (sqlparse/utils.py:103) (73 samples, 0.15%)</title><rect x="74.5437%" y="356" width="0.1544%" height="15" fill="rgb(248,164,17)" fg:x="35245" fg:w="73"/><text x="74.7937%" y="366.50"></text></g><g><title>imt (sqlparse/utils.py:91) (69 samples, 0.15%)</title><rect x="74.7150%" y="356" width="0.1459%" height="15" fill="rgb(222,171,42)" fg:x="35326" fg:w="69"/><text x="74.9650%" y="366.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (230 samples, 0.49%)</title><rect x="74.3956%" y="324" width="0.4865%" height="15" fill="rgb(243,84,45)" fg:x="35175" fg:w="230"/><text x="74.6456%" y="334.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (215 samples, 0.45%)</title><rect x="74.4274%" y="340" width="0.4547%" height="15" fill="rgb(252,49,23)" fg:x="35190" fg:w="215"/><text x="74.6774%" y="350.50"></text></g><g><title>group_aliased (sqlparse/engine/grouping.py:352) (360 samples, 0.76%)</title><rect x="74.1418%" y="292" width="0.7614%" height="15" fill="rgb(215,19,7)" fg:x="35055" fg:w="360"/><text x="74.3918%" y="302.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (323 samples, 0.68%)</title><rect x="74.2201%" y="308" width="0.6831%" height="15" fill="rgb(238,81,41)" fg:x="35092" fg:w="323"/><text x="74.4701%" y="318.50"></text></g><g><title>imt (sqlparse/utils.py:100) (69 samples, 0.15%)</title><rect x="75.5779%" y="356" width="0.1459%" height="15" fill="rgb(210,199,37)" fg:x="35734" fg:w="69"/><text x="75.8279%" y="366.50"></text></g><g><title>imt (sqlparse/utils.py:103) (246 samples, 0.52%)</title><rect x="75.7239%" y="356" width="0.5203%" height="15" fill="rgb(244,192,49)" fg:x="35803" fg:w="246"/><text x="75.9739%" y="366.50"></text></g><g><title>__contains__ (sqlparse/tokens.py:19) (164 samples, 0.35%)</title><rect x="75.8973%" y="372" width="0.3469%" height="15" fill="rgb(226,211,11)" fg:x="35885" fg:w="164"/><text x="76.1473%" y="382.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (538 samples, 1.14%)</title><rect x="75.2205%" y="324" width="1.1379%" height="15" fill="rgb(236,162,54)" fg:x="35565" fg:w="538"/><text x="75.4705%" y="334.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (467 samples, 0.99%)</title><rect x="75.3707%" y="340" width="0.9877%" height="15" fill="rgb(220,229,9)" fg:x="35636" fg:w="467"/><text x="75.6207%" y="350.50"></text></g><g><title>group_comments (sqlparse/engine/grouping.py:314) (689 samples, 1.46%)</title><rect x="74.9032%" y="292" width="1.4572%" height="15" fill="rgb(250,87,22)" fg:x="35415" fg:w="689"/><text x="75.1532%" y="302.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (665 samples, 1.41%)</title><rect x="74.9540%" y="308" width="1.4065%" height="15" fill="rgb(239,43,17)" fg:x="35439" fg:w="665"/><text x="75.2040%" y="318.50"></text></g><g><title>group_comments (sqlparse/engine/grouping.py:316) (55 samples, 0.12%)</title><rect x="76.3626%" y="292" width="0.1163%" height="15" fill="rgb(231,177,25)" fg:x="36105" fg:w="55"/><text x="76.6126%" y="302.50"></text></g><g><title>group_functions (sqlparse/engine/grouping.py:361) (65 samples, 0.14%)</title><rect x="76.5276%" y="292" width="0.1375%" height="15" fill="rgb(219,179,1)" fg:x="36183" fg:w="65"/><text x="76.7776%" y="302.50"></text></g><g><title>group_functions (sqlparse/engine/grouping.py:363) (55 samples, 0.12%)</title><rect x="76.6650%" y="292" width="0.1163%" height="15" fill="rgb(238,219,53)" fg:x="36248" fg:w="55"/><text x="76.9150%" y="302.50"></text></g><g><title>group_functions (sqlparse/engine/grouping.py:370) (56 samples, 0.12%)</title><rect x="76.8258%" y="292" width="0.1184%" height="15" fill="rgb(232,167,36)" fg:x="36324" fg:w="56"/><text x="77.0758%" y="302.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (50 samples, 0.11%)</title><rect x="76.8385%" y="308" width="0.1058%" height="15" fill="rgb(244,19,51)" fg:x="36330" fg:w="50"/><text x="77.0885%" y="318.50"></text></g><g><title>group_functions (sqlparse/engine/grouping.py:372) (159 samples, 0.34%)</title><rect x="76.9506%" y="292" width="0.3363%" height="15" fill="rgb(224,6,22)" fg:x="36383" fg:w="159"/><text x="77.2006%" y="302.50"></text></g><g><title>token_next (sqlparse/sql.py:301) (121 samples, 0.26%)</title><rect x="77.0309%" y="308" width="0.2559%" height="15" fill="rgb(224,145,5)" fg:x="36421" fg:w="121"/><text x="77.2809%" y="318.50"></text></g><g><title>imt (sqlparse/utils.py:100) (58 samples, 0.12%)</title><rect x="78.0800%" y="356" width="0.1227%" height="15" fill="rgb(234,130,49)" fg:x="36917" fg:w="58"/><text x="78.3300%" y="366.50"></text></g><g><title>imt (sqlparse/utils.py:103) (156 samples, 0.33%)</title><rect x="78.2027%" y="356" width="0.3299%" height="15" fill="rgb(254,6,2)" fg:x="36975" fg:w="156"/><text x="78.4527%" y="366.50"></text></g><g><title>__contains__ (sqlparse/tokens.py:19) (98 samples, 0.21%)</title><rect x="78.3253%" y="372" width="0.2073%" height="15" fill="rgb(208,96,46)" fg:x="37033" fg:w="98"/><text x="78.5753%" y="382.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (381 samples, 0.81%)</title><rect x="77.8135%" y="324" width="0.8058%" height="15" fill="rgb(239,3,39)" fg:x="36791" fg:w="381"/><text x="78.0635%" y="334.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (346 samples, 0.73%)</title><rect x="77.8875%" y="340" width="0.7318%" height="15" fill="rgb(233,210,1)" fg:x="36826" fg:w="346"/><text x="78.1375%" y="350.50"></text></g><g><title>group_functions (sqlparse/engine/grouping.py:380) (582 samples, 1.23%)</title><rect x="77.3968%" y="292" width="1.2309%" height="15" fill="rgb(244,137,37)" fg:x="36594" fg:w="582"/><text x="77.6468%" y="302.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (529 samples, 1.12%)</title><rect x="77.5089%" y="308" width="1.1188%" height="15" fill="rgb(240,136,2)" fg:x="36647" fg:w="529"/><text x="77.7589%" y="318.50"></text></g><g><title>__init__ (sqlparse/sql.py:162) (222 samples, 0.47%)</title><rect x="78.9852%" y="324" width="0.4695%" height="15" fill="rgb(239,18,37)" fg:x="37345" fg:w="222"/><text x="79.2352%" y="334.50"></text></g><g><title>__str__ (sqlparse/sql.py:166) (75 samples, 0.16%)</title><rect x="79.2961%" y="340" width="0.1586%" height="15" fill="rgb(218,185,22)" fg:x="37492" fg:w="75"/><text x="79.5461%" y="350.50"></text></g><g><title>group_tokens (sqlparse/sql.py:329) (316 samples, 0.67%)</title><rect x="78.7970%" y="308" width="0.6683%" height="15" fill="rgb(225,218,4)" fg:x="37256" fg:w="316"/><text x="79.0470%" y="318.50"></text></g><g><title>group_identifier (sqlparse/engine/grouping.py:234) (393 samples, 0.83%)</title><rect x="78.7187%" y="292" width="0.8312%" height="15" fill="rgb(230,182,32)" fg:x="37219" fg:w="393"/><text x="78.9687%" y="302.50"></text></g><g><title>imt (sqlparse/utils.py:103) (59 samples, 0.12%)</title><rect x="80.4086%" y="356" width="0.1248%" height="15" fill="rgb(242,56,43)" fg:x="38018" fg:w="59"/><text x="80.6586%" y="366.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (333 samples, 0.70%)</title><rect x="79.9010%" y="324" width="0.7043%" height="15" fill="rgb(233,99,24)" fg:x="37778" fg:w="333"/><text x="80.1510%" y="334.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (286 samples, 0.60%)</title><rect x="80.0004%" y="340" width="0.6049%" height="15" fill="rgb(234,209,42)" fg:x="37825" fg:w="286"/><text x="80.2504%" y="350.50"></text></g><g><title>group_identifier (sqlparse/engine/grouping.py:235) (504 samples, 1.07%)</title><rect x="79.5499%" y="292" width="1.0660%" height="15" fill="rgb(227,7,12)" fg:x="37612" fg:w="504"/><text x="79.7999%" y="302.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (463 samples, 0.98%)</title><rect x="79.6366%" y="308" width="0.9793%" height="15" fill="rgb(245,203,43)" fg:x="37653" fg:w="463"/><text x="79.8866%" y="318.50"></text></g><g><title>imt (sqlparse/utils.py:103) (120 samples, 0.25%)</title><rect x="81.0685%" y="356" width="0.2538%" height="15" fill="rgb(238,205,33)" fg:x="38330" fg:w="120"/><text x="81.3185%" y="366.50"></text></g><g><title>__contains__ (sqlparse/tokens.py:19) (73 samples, 0.15%)</title><rect x="81.1679%" y="372" width="0.1544%" height="15" fill="rgb(231,56,7)" fg:x="38377" fg:w="73"/><text x="81.4179%" y="382.50"></text></g><g><title>group_order (sqlparse/engine/grouping.py:386) (371 samples, 0.78%)</title><rect x="80.6159%" y="292" width="0.7847%" height="15" fill="rgb(244,186,29)" fg:x="38116" fg:w="371"/><text x="80.8659%" y="302.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (367 samples, 0.78%)</title><rect x="80.6244%" y="308" width="0.7762%" height="15" fill="rgb(234,111,31)" fg:x="38120" fg:w="367"/><text x="80.8744%" y="318.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (277 samples, 0.59%)</title><rect x="80.8147%" y="324" width="0.5859%" height="15" fill="rgb(241,149,10)" fg:x="38210" fg:w="277"/><text x="81.0647%" y="334.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (245 samples, 0.52%)</title><rect x="80.8824%" y="340" width="0.5182%" height="15" fill="rgb(249,206,44)" fg:x="38242" fg:w="245"/><text x="81.1324%" y="350.50"></text></g><g><title>match (sqlparse/sql.py:119) (56 samples, 0.12%)</title><rect x="82.2952%" y="372" width="0.1184%" height="15" fill="rgb(251,153,30)" fg:x="38910" fg:w="56"/><text x="82.5452%" y="382.50"></text></g><g><title>imt (sqlparse/utils.py:97) (217 samples, 0.46%)</title><rect x="81.9801%" y="356" width="0.4590%" height="15" fill="rgb(239,152,38)" fg:x="38761" fg:w="217"/><text x="82.2301%" y="366.50"></text></g><g><title>group_over (sqlparse/engine/grouping.py:240) (498 samples, 1.05%)</title><rect x="81.4006%" y="292" width="1.0533%" height="15" fill="rgb(249,139,47)" fg:x="38487" fg:w="498"/><text x="81.6506%" y="302.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (484 samples, 1.02%)</title><rect x="81.4302%" y="308" width="1.0237%" height="15" fill="rgb(244,64,35)" fg:x="38501" fg:w="484"/><text x="81.6802%" y="318.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (413 samples, 0.87%)</title><rect x="81.5803%" y="324" width="0.8735%" height="15" fill="rgb(216,46,15)" fg:x="38572" fg:w="413"/><text x="81.8303%" y="334.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (368 samples, 0.78%)</title><rect x="81.6755%" y="340" width="0.7783%" height="15" fill="rgb(250,74,19)" fg:x="38617" fg:w="368"/><text x="81.9255%" y="350.50"></text></g><g><title>imt (sqlparse/utils.py:97) (140 samples, 0.30%)</title><rect x="82.9847%" y="356" width="0.2961%" height="15" fill="rgb(249,42,33)" fg:x="39236" fg:w="140"/><text x="83.2347%" y="366.50"></text></g><g><title>group_where (sqlparse/engine/grouping.py:327) (396 samples, 0.84%)</title><rect x="82.4538%" y="292" width="0.8375%" height="15" fill="rgb(242,149,17)" fg:x="38985" fg:w="396"/><text x="82.7038%" y="302.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (383 samples, 0.81%)</title><rect x="82.4813%" y="308" width="0.8101%" height="15" fill="rgb(244,29,21)" fg:x="38998" fg:w="383"/><text x="82.7313%" y="318.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (297 samples, 0.63%)</title><rect x="82.6632%" y="324" width="0.6282%" height="15" fill="rgb(220,130,37)" fg:x="39084" fg:w="297"/><text x="82.9132%" y="334.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (261 samples, 0.55%)</title><rect x="82.7394%" y="340" width="0.5520%" height="15" fill="rgb(211,67,2)" fg:x="39120" fg:w="261"/><text x="82.9894%" y="350.50"></text></g><g><title>_token_matching (sqlparse/sql.py:246) (63 samples, 0.13%)</title><rect x="83.3400%" y="324" width="0.1332%" height="15" fill="rgb(235,68,52)" fg:x="39404" fg:w="63"/><text x="83.5900%" y="334.50"></text></g><g><title>&lt;lambda&gt; (sqlparse/sql.py:267) (58 samples, 0.12%)</title><rect x="83.3506%" y="340" width="0.1227%" height="15" fill="rgb(246,142,3)" fg:x="39409" fg:w="58"/><text x="83.6006%" y="350.50"></text></g><g><title>group_where (sqlparse/engine/grouping.py:329) (87 samples, 0.18%)</title><rect x="83.2914%" y="292" width="0.1840%" height="15" fill="rgb(241,25,7)" fg:x="39381" fg:w="87"/><text x="83.5414%" y="302.50"></text></g><g><title>token_next_by (sqlparse/sql.py:267) (83 samples, 0.18%)</title><rect x="83.2998%" y="308" width="0.1755%" height="15" fill="rgb(242,119,39)" fg:x="39385" fg:w="83"/><text x="83.5498%" y="318.50"></text></g><g><title>__init__ (sqlparse/sql.py:162) (78 samples, 0.16%)</title><rect x="83.6404%" y="324" width="0.1650%" height="15" fill="rgb(241,98,45)" fg:x="39546" fg:w="78"/><text x="83.8904%" y="334.50"></text></g><g><title>group_tokens (sqlparse/sql.py:329) (116 samples, 0.25%)</title><rect x="83.5663%" y="308" width="0.2453%" height="15" fill="rgb(254,28,30)" fg:x="39511" fg:w="116"/><text x="83.8163%" y="318.50"></text></g><g><title>group_where (sqlparse/engine/grouping.py:338) (136 samples, 0.29%)</title><rect x="83.5515%" y="292" width="0.2876%" height="15" fill="rgb(241,142,54)" fg:x="39504" fg:w="136"/><text x="83.8015%" y="302.50"></text></g><g><title>run (sqlparse/engine/filter_stack.py:41) (27,142 samples, 57.41%)</title><rect x="26.4546%" y="244" width="57.4057%" height="15" fill="rgb(222,85,15)" fg:x="12508" fg:w="27142"/><text x="26.7046%" y="254.50">run (sqlparse/engine/filter_stack.py:41)</text></g><g><title>group (sqlparse/engine/grouping.py:450) (27,111 samples, 57.34%)</title><rect x="26.5202%" y="260" width="57.3402%" height="15" fill="rgb(210,85,47)" fg:x="12539" fg:w="27111"/><text x="26.7702%" y="270.50">group (sqlparse/engine/grouping.py:450)</text></g><g><title>wrapped_f (sqlparse/utils.py:74) (4,970 samples, 10.51%)</title><rect x="73.3487%" y="276" width="10.5116%" height="15" fill="rgb(224,206,25)" fg:x="34680" fg:w="4970"/><text x="73.5987%" y="286.50">wrapped_f (sqlp..</text></g><g><title>tokens (sql_metadata/parser.py:137) (38,717 samples, 81.89%)</title><rect x="1.9775%" y="212" width="81.8870%" height="15" fill="rgb(243,201,19)" fg:x="935" fg:w="38717"/><text x="2.2275%" y="222.50">tokens (sql_metadata/parser.py:137)</text></g><g><title>parse (sqlparse/__init__.py:30) (38,709 samples, 81.87%)</title><rect x="1.9945%" y="228" width="81.8701%" height="15" fill="rgb(236,59,4)" fg:x="943" fg:w="38709"/><text x="2.2445%" y="238.50">parse (sqlparse/__init__.py:30)</text></g><g><title>flatten (sqlparse/sql.py:215) (93 samples, 0.20%)</title><rect x="84.1733%" y="292" width="0.1967%" height="15" fill="rgb(254,179,45)" fg:x="39798" fg:w="93"/><text x="84.4233%" y="302.50"></text></g><g><title>flatten (sqlparse/sql.py:215) (141 samples, 0.30%)</title><rect x="84.0782%" y="276" width="0.2982%" height="15" fill="rgb(226,14,10)" fg:x="39753" fg:w="141"/><text x="84.3282%" y="286.50"></text></g><g><title>_flatten_sqlparse (sql_metadata/parser.py:1071) (195 samples, 0.41%)</title><rect x="83.9767%" y="260" width="0.4124%" height="15" fill="rgb(244,27,41)" fg:x="39705" fg:w="195"/><text x="84.2267%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sql_metadata/parser.py:1051) (235 samples, 0.50%)</title><rect x="83.9026%" y="244" width="0.4970%" height="15" fill="rgb(235,35,32)" fg:x="39670" fg:w="235"/><text x="84.1526%" y="254.50"></text></g><g><title>_get_sqlparse_tokens (sql_metadata/parser.py:1051) (359 samples, 0.76%)</title><rect x="83.8836%" y="228" width="0.7593%" height="15" fill="rgb(218,68,31)" fg:x="39661" fg:w="359"/><text x="84.1336%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sql_metadata/parser.py:1054) (110 samples, 0.23%)</title><rect x="84.4102%" y="244" width="0.2327%" height="15" fill="rgb(207,120,37)" fg:x="39910" fg:w="110"/><text x="84.6602%" y="254.50"></text></g><g><title>tokens (sql_metadata/parser.py:142) (372 samples, 0.79%)</title><rect x="83.8646%" y="212" width="0.7868%" height="15" fill="rgb(227,98,0)" fg:x="39652" fg:w="372"/><text x="84.1146%" y="222.50"></text></g><g><title>_is_token_part_of_complex_identifier (sql_metadata/parser.py:1016) (105 samples, 0.22%)</title><rect x="85.0722%" y="228" width="0.2221%" height="15" fill="rgb(207,7,3)" fg:x="40223" fg:w="105"/><text x="85.3222%" y="238.50"></text></g><g><title>_is_token_part_of_complex_identifier (sql_metadata/parser.py:1017) (52 samples, 0.11%)</title><rect x="85.2943%" y="228" width="0.1100%" height="15" fill="rgb(206,98,19)" fg:x="40328" fg:w="52"/><text x="85.5443%" y="238.50"></text></g><g><title>tokens (sql_metadata/parser.py:147) (446 samples, 0.94%)</title><rect x="84.7423%" y="212" width="0.9433%" height="15" fill="rgb(217,5,26)" fg:x="40067" fg:w="446"/><text x="84.9923%" y="222.50"></text></g><g><title>_is_token_part_of_complex_identifier (sql_metadata/parser.py:1018) (133 samples, 0.28%)</title><rect x="85.4043%" y="228" width="0.2813%" height="15" fill="rgb(235,190,38)" fg:x="40380" fg:w="133"/><text x="85.6543%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:30) (494 samples, 1.04%)</title><rect x="86.3497%" y="228" width="1.0448%" height="15" fill="rgb(247,86,24)" fg:x="40827" fg:w="494"/><text x="86.5997%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:34) (174 samples, 0.37%)</title><rect x="87.4199%" y="228" width="0.3680%" height="15" fill="rgb(205,101,16)" fg:x="41333" fg:w="174"/><text x="87.6699%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:35) (76 samples, 0.16%)</title><rect x="87.7879%" y="228" width="0.1607%" height="15" fill="rgb(246,168,33)" fg:x="41507" fg:w="76"/><text x="88.0379%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:36) (55 samples, 0.12%)</title><rect x="87.9486%" y="228" width="0.1163%" height="15" fill="rgb(231,114,1)" fg:x="41583" fg:w="55"/><text x="88.1986%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:38) (51 samples, 0.11%)</title><rect x="88.0650%" y="228" width="0.1079%" height="15" fill="rgb(207,184,53)" fg:x="41638" fg:w="51"/><text x="88.3150%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:39) (56 samples, 0.12%)</title><rect x="88.1728%" y="228" width="0.1184%" height="15" fill="rgb(224,95,51)" fg:x="41689" fg:w="56"/><text x="88.4228%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:40) (181 samples, 0.38%)</title><rect x="88.2913%" y="228" width="0.3828%" height="15" fill="rgb(212,188,45)" fg:x="41745" fg:w="181"/><text x="88.5413%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:41) (48 samples, 0.10%)</title><rect x="88.6741%" y="228" width="0.1015%" height="15" fill="rgb(223,154,38)" fg:x="41926" fg:w="48"/><text x="88.9241%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:42) (90 samples, 0.19%)</title><rect x="88.7756%" y="228" width="0.1904%" height="15" fill="rgb(251,22,52)" fg:x="41974" fg:w="90"/><text x="89.0256%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:43) (69 samples, 0.15%)</title><rect x="88.9660%" y="228" width="0.1459%" height="15" fill="rgb(229,209,22)" fg:x="42064" fg:w="69"/><text x="89.2160%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:44) (108 samples, 0.23%)</title><rect x="89.1119%" y="228" width="0.2284%" height="15" fill="rgb(234,138,34)" fg:x="42133" fg:w="108"/><text x="89.3619%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:45) (103 samples, 0.22%)</title><rect x="89.3403%" y="228" width="0.2178%" height="15" fill="rgb(212,95,11)" fg:x="42241" fg:w="103"/><text x="89.5903%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:47) (135 samples, 0.29%)</title><rect x="89.5582%" y="228" width="0.2855%" height="15" fill="rgb(240,179,47)" fg:x="42344" fg:w="135"/><text x="89.8082%" y="238.50"></text></g><g><title>__init__ (sql_metadata/token.py:48) (109 samples, 0.23%)</title><rect x="89.8437%" y="228" width="0.2305%" height="15" fill="rgb(240,163,11)" fg:x="42479" fg:w="109"/><text x="90.0937%" y="238.50"></text></g><g><title>_set_default_parenthesis_status (sql_metadata/token.py:77) (66 samples, 0.14%)</title><rect x="90.5924%" y="244" width="0.1396%" height="15" fill="rgb(236,37,12)" fg:x="42833" fg:w="66"/><text x="90.8424%" y="254.50"></text></g><g><title>_set_default_parenthesis_status (sql_metadata/token.py:80) (255 samples, 0.54%)</title><rect x="90.8737%" y="244" width="0.5393%" height="15" fill="rgb(232,164,16)" fg:x="42966" fg:w="255"/><text x="91.1237%" y="254.50"></text></g><g><title>_set_default_parenthesis_status (sql_metadata/token.py:90) (49 samples, 0.10%)</title><rect x="91.9883%" y="244" width="0.1036%" height="15" fill="rgb(244,205,15)" fg:x="43493" fg:w="49"/><text x="92.2383%" y="254.50"></text></g><g><title>tokens (sql_metadata/parser.py:150) (3,089 samples, 6.53%)</title><rect x="85.6856%" y="212" width="6.5333%" height="15" fill="rgb(223,117,47)" fg:x="40513" fg:w="3089"/><text x="85.9356%" y="222.50">tokens (s..</text></g><g><title>__init__ (sql_metadata/token.py:55) (843 samples, 1.78%)</title><rect x="90.4359%" y="228" width="1.7830%" height="15" fill="rgb(244,107,35)" fg:x="42759" fg:w="843"/><text x="90.6859%" y="238.50">_..</text></g><g><title>tokens (sql_metadata/parser.py:162) (55 samples, 0.12%)</title><rect x="92.3986%" y="212" width="0.1163%" height="15" fill="rgb(205,140,8)" fg:x="43687" fg:w="55"/><text x="92.6486%" y="222.50"></text></g><g><title>_determine_last_relevant_keyword (sql_metadata/parser.py:989) (222 samples, 0.47%)</title><rect x="93.7311%" y="228" width="0.4695%" height="15" fill="rgb(228,84,46)" fg:x="44317" fg:w="222"/><text x="93.9811%" y="238.50"></text></g><g><title>last_keyword_normalized (sql_metadata/token.py:140) (142 samples, 0.30%)</title><rect x="93.9003%" y="244" width="0.3003%" height="15" fill="rgb(254,188,9)" fg:x="44397" fg:w="142"/><text x="94.1503%" y="254.50"></text></g><g><title>_determine_last_relevant_keyword (sql_metadata/parser.py:991) (172 samples, 0.36%)</title><rect x="94.2006%" y="228" width="0.3638%" height="15" fill="rgb(206,112,54)" fg:x="44539" fg:w="172"/><text x="94.4506%" y="238.50"></text></g><g><title>normalized (sql_metadata/token.py:112) (87 samples, 0.18%)</title><rect x="94.3804%" y="244" width="0.1840%" height="15" fill="rgb(216,84,49)" fg:x="44624" fg:w="87"/><text x="94.6304%" y="254.50"></text></g><g><title>tokens (sql_metadata/parser.py:173) (948 samples, 2.01%)</title><rect x="92.7053%" y="212" width="2.0050%" height="15" fill="rgb(214,194,35)" fg:x="43832" fg:w="948"/><text x="92.9553%" y="222.50">t..</text></g><g><title>query_type (sql_metadata/parser.py:101) (99 samples, 0.21%)</title><rect x="95.0234%" y="228" width="0.2094%" height="15" fill="rgb(249,28,3)" fg:x="44928" fg:w="99"/><text x="95.2734%" y="238.50"></text></g><g><title>&lt;lambda&gt; (sql_metadata/parser.py:102) (52 samples, 0.11%)</title><rect x="95.1228%" y="244" width="0.1100%" height="15" fill="rgb(222,56,52)" fg:x="44975" fg:w="52"/><text x="95.3728%" y="254.50"></text></g><g><title>with_names (sql_metadata/parser.py:457) (44,230 samples, 93.55%)</title><rect x="1.8126%" y="180" width="93.5471%" height="15" fill="rgb(245,217,50)" fg:x="857" fg:w="44230"/><text x="2.0626%" y="190.50">with_names (sql_metadata/parser.py:457)</text></g><g><title>_not_parsed_tokens (sql_metadata/parser.py:647) (44,213 samples, 93.51%)</title><rect x="1.8485%" y="196" width="93.5111%" height="15" fill="rgb(213,201,24)" fg:x="874" fg:w="44213"/><text x="2.0985%" y="206.50">_not_parsed_tokens (sql_metadata/parser.py:647)</text></g><g><title>tokens (sql_metadata/parser.py:185) (166 samples, 0.35%)</title><rect x="95.0086%" y="212" width="0.3511%" height="15" fill="rgb(248,116,28)" fg:x="44921" fg:w="166"/><text x="95.2586%" y="222.50"></text></g><g><title>with_names (sql_metadata/parser.py:458) (628 samples, 1.33%)</title><rect x="95.3597%" y="180" width="1.3282%" height="15" fill="rgb(219,72,43)" fg:x="45087" fg:w="628"/><text x="95.6097%" y="190.50"></text></g><g><title>normalized (sql_metadata/token.py:112) (528 samples, 1.12%)</title><rect x="95.5712%" y="196" width="1.1167%" height="15" fill="rgb(209,138,14)" fg:x="45187" fg:w="528"/><text x="95.8212%" y="206.50"></text></g><g><title>tables (sql_metadata/parser.py:350) (44,871 samples, 94.90%)</title><rect x="1.7978%" y="164" width="94.9028%" height="15" fill="rgb(222,18,33)" fg:x="850" fg:w="44871"/><text x="2.0478%" y="174.50">tables (sql_metadata/parser.py:350)</text></g><g><title>tables (sql_metadata/parser.py:352) (76 samples, 0.16%)</title><rect x="96.7006%" y="164" width="0.1607%" height="15" fill="rgb(213,199,7)" fg:x="45721" fg:w="76"/><text x="96.9506%" y="174.50"></text></g><g><title>_not_parsed_tokens (sql_metadata/parser.py:647) (54 samples, 0.11%)</title><rect x="96.7471%" y="180" width="0.1142%" height="15" fill="rgb(250,110,10)" fg:x="45743" fg:w="54"/><text x="96.9971%" y="190.50"></text></g><g><title>is_potential_table_name (sql_metadata/token.py:263) (202 samples, 0.43%)</title><rect x="97.0517%" y="180" width="0.4272%" height="15" fill="rgb(248,123,6)" fg:x="45887" fg:w="202"/><text x="97.3017%" y="190.50"></text></g><g><title>last_keyword_normalized (sql_metadata/token.py:140) (151 samples, 0.32%)</title><rect x="97.1595%" y="196" width="0.3194%" height="15" fill="rgb(206,91,31)" fg:x="45938" fg:w="151"/><text x="97.4095%" y="206.50"></text></g><g><title>tables (sql_metadata/parser.py:353) (432 samples, 0.91%)</title><rect x="96.8613%" y="164" width="0.9137%" height="15" fill="rgb(211,154,13)" fg:x="45797" fg:w="432"/><text x="97.1113%" y="174.50"></text></g><g><title>is_potential_table_name (sql_metadata/token.py:265) (93 samples, 0.20%)</title><rect x="97.5783%" y="180" width="0.1967%" height="15" fill="rgb(225,148,7)" fg:x="46136" fg:w="93"/><text x="97.8283%" y="190.50"></text></g><g><title>normalized (sql_metadata/token.py:112) (78 samples, 0.16%)</title><rect x="97.6100%" y="196" width="0.1650%" height="15" fill="rgb(220,160,43)" fg:x="46151" fg:w="78"/><text x="97.8600%" y="206.50"></text></g><g><title>is_alias_of_table_or_alias_of_subquery (sql_metadata/token.py:289) (100 samples, 0.21%)</title><rect x="97.7898%" y="180" width="0.2115%" height="15" fill="rgb(213,52,39)" fg:x="46236" fg:w="100"/><text x="98.0398%" y="190.50"></text></g><g><title>tables (sql_metadata/parser.py:355) (115 samples, 0.24%)</title><rect x="97.7792%" y="164" width="0.2432%" height="15" fill="rgb(243,137,7)" fg:x="46231" fg:w="115"/><text x="98.0292%" y="174.50"></text></g><g><title>tables (sql_metadata/parser.py:356) (76 samples, 0.16%)</title><rect x="98.0225%" y="164" width="0.1607%" height="15" fill="rgb(230,79,13)" fg:x="46346" fg:w="76"/><text x="98.2725%" y="174.50"></text></g><g><title>is_with_statement_nested_in_subquery (sql_metadata/token.py:274) (71 samples, 0.15%)</title><rect x="98.0330%" y="180" width="0.1502%" height="15" fill="rgb(247,105,23)" fg:x="46351" fg:w="71"/><text x="98.2830%" y="190.50"></text></g><g><title>normalized (sql_metadata/token.py:112) (64 samples, 0.14%)</title><rect x="98.0478%" y="196" width="0.1354%" height="15" fill="rgb(223,179,41)" fg:x="46358" fg:w="64"/><text x="98.2978%" y="206.50"></text></g><g><title>tables (sql_metadata/parser.py:357) (57 samples, 0.12%)</title><rect x="98.1832%" y="164" width="0.1206%" height="15" fill="rgb(218,9,34)" fg:x="46422" fg:w="57"/><text x="98.4332%" y="174.50"></text></g><g><title>is_constraint_definition_inside_create_table_clause (sql_metadata/token.py:392) (51 samples, 0.11%)</title><rect x="98.1959%" y="180" width="0.1079%" height="15" fill="rgb(222,106,8)" fg:x="46428" fg:w="51"/><text x="98.4459%" y="190.50"></text></g><g><title>find_nearest_token (sql_metadata/token.py:557) (119 samples, 0.25%)</title><rect x="98.3820%" y="196" width="0.2517%" height="15" fill="rgb(211,220,0)" fg:x="46516" fg:w="119"/><text x="98.6320%" y="206.50"></text></g><g><title>find_nearest_token (sql_metadata/token.py:558) (174 samples, 0.37%)</title><rect x="98.6337%" y="196" width="0.3680%" height="15" fill="rgb(229,52,16)" fg:x="46635" fg:w="174"/><text x="98.8837%" y="206.50"></text></g><g><title>find_nearest_token (sql_metadata/token.py:559) (75 samples, 0.16%)</title><rect x="99.0017%" y="196" width="0.1586%" height="15" fill="rgb(212,155,18)" fg:x="46809" fg:w="75"/><text x="99.2517%" y="206.50"></text></g><g><title>is_columns_alias_of_with_query_or_column_in_insert_query (sql_metadata/token.py:407) (475 samples, 1.00%)</title><rect x="98.3587%" y="180" width="1.0046%" height="15" fill="rgb(242,21,14)" fg:x="46505" fg:w="475"/><text x="98.6087%" y="190.50"></text></g><g><title>find_nearest_token (sql_metadata/token.py:561) (93 samples, 0.20%)</title><rect x="99.1667%" y="196" width="0.1967%" height="15" fill="rgb(222,19,48)" fg:x="46887" fg:w="93"/><text x="99.4167%" y="206.50"></text></g><g><title>tables (sql_metadata/parser.py:360) (534 samples, 1.13%)</title><rect x="98.3164%" y="164" width="1.1294%" height="15" fill="rgb(232,45,27)" fg:x="46485" fg:w="534"/><text x="98.5664%" y="174.50"></text></g><g><title>parse_db_table_name_from_query (utils.py:11) (46,972 samples, 99.35%)</title><rect x="0.2728%" y="148" width="99.3465%" height="15" fill="rgb(249,103,42)" fg:x="129" fg:w="46972"/><text x="0.5228%" y="158.50">parse_db_table_name_from_query (utils.py:11)</text></g><g><title>__init__ (parser.py:112) (46,996 samples, 99.40%)</title><rect x="0.2559%" y="132" width="99.3972%" height="15" fill="rgb(246,81,33)" fg:x="121" fg:w="46996"/><text x="0.5059%" y="142.50">__init__ (parser.py:112)</text></g><g><title>_parse_event (parser.py:251) (47,105 samples, 99.63%)</title><rect x="0.1629%" y="116" width="99.6278%" height="15" fill="rgb(252,33,42)" fg:x="77" fg:w="47105"/><text x="0.4129%" y="126.50">_parse_event (parser.py:251)</text></g><g><title>parse_queries (parser.py:200) (47,225 samples, 99.88%)</title><rect x="0.1142%" y="100" width="99.8816%" height="15" fill="rgb(209,212,41)" fg:x="54" fg:w="47225"/><text x="0.3642%" y="110.50">parse_queries (parser.py:200)</text></g><g><title>all (47,281 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(207,154,6)" fg:x="0" fg:w="47281"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (main.py:4) (47,278 samples, 99.99%)</title><rect x="0.0063%" y="68" width="99.9937%" height="15" fill="rgb(223,64,47)" fg:x="3" fg:w="47278"/><text x="0.2563%" y="78.50">&lt;module&gt; (main.py:4)</text></g><g><title>add (indexer.py:25) (47,240 samples, 99.91%)</title><rect x="0.0867%" y="84" width="99.9133%" height="15" fill="rgb(211,161,38)" fg:x="41" fg:w="47240"/><text x="0.3367%" y="94.50">add (indexer.py:25)</text></g></svg></svg>